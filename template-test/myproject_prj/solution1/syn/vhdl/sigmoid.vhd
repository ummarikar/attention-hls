-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity sigmoid is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    ap_ce : IN STD_LOGIC;
    data_0_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    data_1_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    data_2_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    data_3_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    data_4_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    data_5_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    data_6_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    data_7_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    ap_return_0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_2 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_3 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_4 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_5 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_6 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_7 : OUT STD_LOGIC_VECTOR (15 downto 0) );
end;


architecture behav of sigmoid is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv26_3FFFFF1 : STD_LOGIC_VECTOR (25 downto 0) := "11111111111111111111110001";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv13_1 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000001";
    constant ap_const_lv13_200 : STD_LOGIC_VECTOR (12 downto 0) := "0001000000000";
    constant ap_const_lv12_200 : STD_LOGIC_VECTOR (11 downto 0) := "001000000000";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv10_3FF : STD_LOGIC_VECTOR (9 downto 0) := "1111111111";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal sigmoid_table14_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal sigmoid_table14_ce0 : STD_LOGIC;
    signal sigmoid_table14_q0 : STD_LOGIC_VECTOR (9 downto 0);
    signal sigmoid_table14_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal sigmoid_table14_ce1 : STD_LOGIC;
    signal sigmoid_table14_q1 : STD_LOGIC_VECTOR (9 downto 0);
    signal sigmoid_table14_address2 : STD_LOGIC_VECTOR (9 downto 0);
    signal sigmoid_table14_ce2 : STD_LOGIC;
    signal sigmoid_table14_q2 : STD_LOGIC_VECTOR (9 downto 0);
    signal sigmoid_table14_address3 : STD_LOGIC_VECTOR (9 downto 0);
    signal sigmoid_table14_ce3 : STD_LOGIC;
    signal sigmoid_table14_q3 : STD_LOGIC_VECTOR (9 downto 0);
    signal sigmoid_table14_address4 : STD_LOGIC_VECTOR (9 downto 0);
    signal sigmoid_table14_ce4 : STD_LOGIC;
    signal sigmoid_table14_q4 : STD_LOGIC_VECTOR (9 downto 0);
    signal sigmoid_table14_address5 : STD_LOGIC_VECTOR (9 downto 0);
    signal sigmoid_table14_ce5 : STD_LOGIC;
    signal sigmoid_table14_q5 : STD_LOGIC_VECTOR (9 downto 0);
    signal sigmoid_table14_address6 : STD_LOGIC_VECTOR (9 downto 0);
    signal sigmoid_table14_ce6 : STD_LOGIC;
    signal sigmoid_table14_q6 : STD_LOGIC_VECTOR (9 downto 0);
    signal sigmoid_table14_address7 : STD_LOGIC_VECTOR (9 downto 0);
    signal sigmoid_table14_ce7 : STD_LOGIC;
    signal sigmoid_table14_q7 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln172_fu_343_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln172_reg_1359 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln172_1_fu_471_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln172_1_reg_1364 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln172_2_fu_599_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln172_2_reg_1369 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln172_3_fu_727_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln172_3_reg_1374 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln172_4_fu_855_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln172_4_reg_1379 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln172_5_fu_983_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln172_5_reg_1384 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln172_6_fu_1111_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln172_6_reg_1389 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln172_7_fu_1239_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln172_7_reg_1394 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal zext_ln173_fu_1247_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln173_1_fu_1251_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln173_2_fu_1255_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln173_3_fu_1259_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln173_4_fu_1263_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln173_5_fu_1267_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln173_6_fu_1271_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln173_7_fu_1275_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_s_fu_231_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln_fu_223_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal trunc_ln851_fu_251_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_Result_9_fu_255_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln850_fu_241_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal icmp_ln851_fu_263_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln700_fu_269_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal icmp_ln850_fu_245_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln851_fu_275_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal select_ln850_fu_283_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal trunc_ln170_fu_291_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln170_fu_295_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_210_fu_307_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln170_8_fu_301_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln171_fu_315_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_211_fu_327_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln172_fu_337_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln171_fu_323_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_129_fu_359_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln1118_64_fu_351_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal trunc_ln851_71_fu_379_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_Result_9_1_fu_383_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln850_64_fu_369_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal icmp_ln851_1_fu_391_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln700_64_fu_397_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal icmp_ln850_64_fu_373_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln851_1_fu_403_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal select_ln850_64_fu_411_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal trunc_ln170_8_fu_419_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln170_1_fu_423_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_212_fu_435_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln170_9_fu_429_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln171_1_fu_443_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_213_fu_455_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln172_8_fu_465_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln171_8_fu_451_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_130_fu_487_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln1118_65_fu_479_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal trunc_ln851_72_fu_507_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_Result_9_2_fu_511_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln850_65_fu_497_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal icmp_ln851_2_fu_519_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln700_65_fu_525_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal icmp_ln850_65_fu_501_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln851_2_fu_531_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal select_ln850_65_fu_539_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal trunc_ln170_9_fu_547_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln170_2_fu_551_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_214_fu_563_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln170_10_fu_557_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln171_2_fu_571_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_215_fu_583_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln172_9_fu_593_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln171_9_fu_579_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_131_fu_615_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln1118_66_fu_607_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal trunc_ln851_73_fu_635_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_Result_9_3_fu_639_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln850_66_fu_625_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal icmp_ln851_3_fu_647_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln700_66_fu_653_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal icmp_ln850_66_fu_629_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln851_3_fu_659_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal select_ln850_66_fu_667_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal trunc_ln170_10_fu_675_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln170_3_fu_679_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_216_fu_691_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln170_11_fu_685_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln171_3_fu_699_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_217_fu_711_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln172_10_fu_721_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln171_10_fu_707_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_132_fu_743_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln1118_67_fu_735_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal trunc_ln851_74_fu_763_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_Result_9_4_fu_767_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln850_67_fu_753_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal icmp_ln851_4_fu_775_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln700_67_fu_781_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal icmp_ln850_67_fu_757_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln851_4_fu_787_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal select_ln850_67_fu_795_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal trunc_ln170_11_fu_803_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln170_4_fu_807_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_218_fu_819_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln170_12_fu_813_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln171_4_fu_827_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_219_fu_839_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln172_11_fu_849_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln171_11_fu_835_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_133_fu_871_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln1118_68_fu_863_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal trunc_ln851_75_fu_891_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_Result_9_5_fu_895_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln850_68_fu_881_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal icmp_ln851_5_fu_903_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln700_68_fu_909_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal icmp_ln850_68_fu_885_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln851_5_fu_915_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal select_ln850_68_fu_923_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal trunc_ln170_12_fu_931_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln170_5_fu_935_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_220_fu_947_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln170_13_fu_941_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln171_5_fu_955_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_221_fu_967_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln172_12_fu_977_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln171_12_fu_963_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_134_fu_999_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln1118_s_fu_991_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal trunc_ln851_76_fu_1019_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_Result_9_6_fu_1023_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln850_69_fu_1009_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal icmp_ln851_6_fu_1031_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln700_69_fu_1037_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal icmp_ln850_69_fu_1013_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln851_6_fu_1043_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal select_ln850_69_fu_1051_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal trunc_ln170_13_fu_1059_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln170_6_fu_1063_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_222_fu_1075_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln170_14_fu_1069_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln171_6_fu_1083_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_223_fu_1095_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln172_13_fu_1105_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln171_13_fu_1091_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_135_fu_1127_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln1118_69_fu_1119_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal trunc_ln851_77_fu_1147_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_Result_9_7_fu_1151_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln850_70_fu_1137_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal icmp_ln851_7_fu_1159_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln700_70_fu_1165_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal icmp_ln850_70_fu_1141_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln851_7_fu_1171_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal select_ln850_70_fu_1179_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal trunc_ln170_14_fu_1187_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln170_7_fu_1191_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_224_fu_1203_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln170_15_fu_1197_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln171_7_fu_1211_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_225_fu_1223_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln172_14_fu_1233_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln171_14_fu_1219_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln703_fu_1279_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln703_15_fu_1283_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln703_16_fu_1287_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln703_17_fu_1291_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln703_18_fu_1295_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln703_19_fu_1299_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln703_20_fu_1303_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln703_21_fu_1307_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_idle_pp0_0to1 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;

    component sigmoid_1_sigmoidbkb IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        address1 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        address2 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce2 : IN STD_LOGIC;
        q2 : OUT STD_LOGIC_VECTOR (9 downto 0);
        address3 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce3 : IN STD_LOGIC;
        q3 : OUT STD_LOGIC_VECTOR (9 downto 0);
        address4 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce4 : IN STD_LOGIC;
        q4 : OUT STD_LOGIC_VECTOR (9 downto 0);
        address5 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce5 : IN STD_LOGIC;
        q5 : OUT STD_LOGIC_VECTOR (9 downto 0);
        address6 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce6 : IN STD_LOGIC;
        q6 : OUT STD_LOGIC_VECTOR (9 downto 0);
        address7 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce7 : IN STD_LOGIC;
        q7 : OUT STD_LOGIC_VECTOR (9 downto 0) );
    end component;



begin
    sigmoid_table14_U : component sigmoid_1_sigmoidbkb
    generic map (
        DataWidth => 10,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => sigmoid_table14_address0,
        ce0 => sigmoid_table14_ce0,
        q0 => sigmoid_table14_q0,
        address1 => sigmoid_table14_address1,
        ce1 => sigmoid_table14_ce1,
        q1 => sigmoid_table14_q1,
        address2 => sigmoid_table14_address2,
        ce2 => sigmoid_table14_ce2,
        q2 => sigmoid_table14_q2,
        address3 => sigmoid_table14_address3,
        ce3 => sigmoid_table14_ce3,
        q3 => sigmoid_table14_q3,
        address4 => sigmoid_table14_address4,
        ce4 => sigmoid_table14_ce4,
        q4 => sigmoid_table14_q4,
        address5 => sigmoid_table14_address5,
        ce5 => sigmoid_table14_ce5,
        q5 => sigmoid_table14_q5,
        address6 => sigmoid_table14_address6,
        ce6 => sigmoid_table14_ce6,
        q6 => sigmoid_table14_q6,
        address7 => sigmoid_table14_address7,
        ce7 => sigmoid_table14_ce7,
        q7 => sigmoid_table14_q7);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                select_ln172_1_reg_1364 <= select_ln172_1_fu_471_p3;
                select_ln172_2_reg_1369 <= select_ln172_2_fu_599_p3;
                select_ln172_3_reg_1374 <= select_ln172_3_fu_727_p3;
                select_ln172_4_reg_1379 <= select_ln172_4_fu_855_p3;
                select_ln172_5_reg_1384 <= select_ln172_5_fu_983_p3;
                select_ln172_6_reg_1389 <= select_ln172_6_fu_1111_p3;
                select_ln172_7_reg_1394 <= select_ln172_7_fu_1239_p3;
                select_ln172_reg_1359 <= select_ln172_fu_343_p3;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln170_10_fu_557_p2 <= std_logic_vector(unsigned(ap_const_lv12_200) + unsigned(trunc_ln170_9_fu_547_p1));
    add_ln170_11_fu_685_p2 <= std_logic_vector(unsigned(ap_const_lv12_200) + unsigned(trunc_ln170_10_fu_675_p1));
    add_ln170_12_fu_813_p2 <= std_logic_vector(unsigned(ap_const_lv12_200) + unsigned(trunc_ln170_11_fu_803_p1));
    add_ln170_13_fu_941_p2 <= std_logic_vector(unsigned(ap_const_lv12_200) + unsigned(trunc_ln170_12_fu_931_p1));
    add_ln170_14_fu_1069_p2 <= std_logic_vector(unsigned(ap_const_lv12_200) + unsigned(trunc_ln170_13_fu_1059_p1));
    add_ln170_15_fu_1197_p2 <= std_logic_vector(unsigned(ap_const_lv12_200) + unsigned(trunc_ln170_14_fu_1187_p1));
    add_ln170_1_fu_423_p2 <= std_logic_vector(unsigned(ap_const_lv13_200) + unsigned(select_ln850_64_fu_411_p3));
    add_ln170_2_fu_551_p2 <= std_logic_vector(unsigned(ap_const_lv13_200) + unsigned(select_ln850_65_fu_539_p3));
    add_ln170_3_fu_679_p2 <= std_logic_vector(unsigned(ap_const_lv13_200) + unsigned(select_ln850_66_fu_667_p3));
    add_ln170_4_fu_807_p2 <= std_logic_vector(unsigned(ap_const_lv13_200) + unsigned(select_ln850_67_fu_795_p3));
    add_ln170_5_fu_935_p2 <= std_logic_vector(unsigned(ap_const_lv13_200) + unsigned(select_ln850_68_fu_923_p3));
    add_ln170_6_fu_1063_p2 <= std_logic_vector(unsigned(ap_const_lv13_200) + unsigned(select_ln850_69_fu_1051_p3));
    add_ln170_7_fu_1191_p2 <= std_logic_vector(unsigned(ap_const_lv13_200) + unsigned(select_ln850_70_fu_1179_p3));
    add_ln170_8_fu_301_p2 <= std_logic_vector(unsigned(ap_const_lv12_200) + unsigned(trunc_ln170_fu_291_p1));
    add_ln170_9_fu_429_p2 <= std_logic_vector(unsigned(ap_const_lv12_200) + unsigned(trunc_ln170_8_fu_419_p1));
    add_ln170_fu_295_p2 <= std_logic_vector(unsigned(ap_const_lv13_200) + unsigned(select_ln850_fu_283_p3));
    add_ln700_64_fu_397_p2 <= std_logic_vector(unsigned(ap_const_lv13_1) + unsigned(sext_ln850_64_fu_369_p1));
    add_ln700_65_fu_525_p2 <= std_logic_vector(unsigned(ap_const_lv13_1) + unsigned(sext_ln850_65_fu_497_p1));
    add_ln700_66_fu_653_p2 <= std_logic_vector(unsigned(ap_const_lv13_1) + unsigned(sext_ln850_66_fu_625_p1));
    add_ln700_67_fu_781_p2 <= std_logic_vector(unsigned(ap_const_lv13_1) + unsigned(sext_ln850_67_fu_753_p1));
    add_ln700_68_fu_909_p2 <= std_logic_vector(unsigned(ap_const_lv13_1) + unsigned(sext_ln850_68_fu_881_p1));
    add_ln700_69_fu_1037_p2 <= std_logic_vector(unsigned(ap_const_lv13_1) + unsigned(sext_ln850_69_fu_1009_p1));
    add_ln700_70_fu_1165_p2 <= std_logic_vector(unsigned(ap_const_lv13_1) + unsigned(sext_ln850_70_fu_1137_p1));
    add_ln700_fu_269_p2 <= std_logic_vector(unsigned(ap_const_lv13_1) + unsigned(sext_ln850_fu_241_p1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_11001_assign_proc : process(ap_start)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_start = ap_const_logic_0) and (ap_start = ap_const_logic_1));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_start, ap_ce)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_const_logic_0 = ap_ce) or ((ap_start = ap_const_logic_0) and (ap_start = ap_const_logic_1)));
    end process;


    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_start)
    begin
                ap_block_state1_pp0_stage0_iter0 <= (ap_start = ap_const_logic_0);
    end process;

        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_done_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if ((((ap_start = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start;

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0_0to1 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if (((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to1 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_return_0 <= zext_ln703_fu_1279_p1;
    ap_return_1 <= zext_ln703_15_fu_1283_p1;
    ap_return_2 <= zext_ln703_16_fu_1287_p1;
    ap_return_3 <= zext_ln703_17_fu_1291_p1;
    ap_return_4 <= zext_ln703_18_fu_1295_p1;
    ap_return_5 <= zext_ln703_19_fu_1299_p1;
    ap_return_6 <= zext_ln703_20_fu_1303_p1;
    ap_return_7 <= zext_ln703_21_fu_1307_p1;
    icmp_ln172_10_fu_721_p2 <= "0" when (tmp_217_fu_711_p4 = ap_const_lv2_0) else "1";
    icmp_ln172_11_fu_849_p2 <= "0" when (tmp_219_fu_839_p4 = ap_const_lv2_0) else "1";
    icmp_ln172_12_fu_977_p2 <= "0" when (tmp_221_fu_967_p4 = ap_const_lv2_0) else "1";
    icmp_ln172_13_fu_1105_p2 <= "0" when (tmp_223_fu_1095_p4 = ap_const_lv2_0) else "1";
    icmp_ln172_14_fu_1233_p2 <= "0" when (tmp_225_fu_1223_p4 = ap_const_lv2_0) else "1";
    icmp_ln172_8_fu_465_p2 <= "0" when (tmp_213_fu_455_p4 = ap_const_lv2_0) else "1";
    icmp_ln172_9_fu_593_p2 <= "0" when (tmp_215_fu_583_p4 = ap_const_lv2_0) else "1";
    icmp_ln172_fu_337_p2 <= "0" when (tmp_211_fu_327_p4 = ap_const_lv2_0) else "1";
    icmp_ln850_64_fu_373_p2 <= "1" when (signed(shl_ln1118_64_fu_351_p3) < signed(ap_const_lv26_3FFFFF1)) else "0";
    icmp_ln850_65_fu_501_p2 <= "1" when (signed(shl_ln1118_65_fu_479_p3) < signed(ap_const_lv26_3FFFFF1)) else "0";
    icmp_ln850_66_fu_629_p2 <= "1" when (signed(shl_ln1118_66_fu_607_p3) < signed(ap_const_lv26_3FFFFF1)) else "0";
    icmp_ln850_67_fu_757_p2 <= "1" when (signed(shl_ln1118_67_fu_735_p3) < signed(ap_const_lv26_3FFFFF1)) else "0";
    icmp_ln850_68_fu_885_p2 <= "1" when (signed(shl_ln1118_68_fu_863_p3) < signed(ap_const_lv26_3FFFFF1)) else "0";
    icmp_ln850_69_fu_1013_p2 <= "1" when (signed(shl_ln1118_s_fu_991_p3) < signed(ap_const_lv26_3FFFFF1)) else "0";
    icmp_ln850_70_fu_1141_p2 <= "1" when (signed(shl_ln1118_69_fu_1119_p3) < signed(ap_const_lv26_3FFFFF1)) else "0";
    icmp_ln850_fu_245_p2 <= "1" when (signed(shl_ln_fu_223_p3) < signed(ap_const_lv26_3FFFFF1)) else "0";
    icmp_ln851_1_fu_391_p2 <= "1" when (p_Result_9_1_fu_383_p3 = ap_const_lv10_0) else "0";
    icmp_ln851_2_fu_519_p2 <= "1" when (p_Result_9_2_fu_511_p3 = ap_const_lv10_0) else "0";
    icmp_ln851_3_fu_647_p2 <= "1" when (p_Result_9_3_fu_639_p3 = ap_const_lv10_0) else "0";
    icmp_ln851_4_fu_775_p2 <= "1" when (p_Result_9_4_fu_767_p3 = ap_const_lv10_0) else "0";
    icmp_ln851_5_fu_903_p2 <= "1" when (p_Result_9_5_fu_895_p3 = ap_const_lv10_0) else "0";
    icmp_ln851_6_fu_1031_p2 <= "1" when (p_Result_9_6_fu_1023_p3 = ap_const_lv10_0) else "0";
    icmp_ln851_7_fu_1159_p2 <= "1" when (p_Result_9_7_fu_1151_p3 = ap_const_lv10_0) else "0";
    icmp_ln851_fu_263_p2 <= "1" when (p_Result_9_fu_255_p3 = ap_const_lv10_0) else "0";
    p_Result_9_1_fu_383_p3 <= (trunc_ln851_71_fu_379_p1 & ap_const_lv6_0);
    p_Result_9_2_fu_511_p3 <= (trunc_ln851_72_fu_507_p1 & ap_const_lv6_0);
    p_Result_9_3_fu_639_p3 <= (trunc_ln851_73_fu_635_p1 & ap_const_lv6_0);
    p_Result_9_4_fu_767_p3 <= (trunc_ln851_74_fu_763_p1 & ap_const_lv6_0);
    p_Result_9_5_fu_895_p3 <= (trunc_ln851_75_fu_891_p1 & ap_const_lv6_0);
    p_Result_9_6_fu_1023_p3 <= (trunc_ln851_76_fu_1019_p1 & ap_const_lv6_0);
    p_Result_9_7_fu_1151_p3 <= (trunc_ln851_77_fu_1147_p1 & ap_const_lv6_0);
    p_Result_9_fu_255_p3 <= (trunc_ln851_fu_251_p1 & ap_const_lv6_0);
    select_ln171_1_fu_443_p3 <= 
        ap_const_lv12_0 when (tmp_212_fu_435_p3(0) = '1') else 
        add_ln170_9_fu_429_p2;
    select_ln171_2_fu_571_p3 <= 
        ap_const_lv12_0 when (tmp_214_fu_563_p3(0) = '1') else 
        add_ln170_10_fu_557_p2;
    select_ln171_3_fu_699_p3 <= 
        ap_const_lv12_0 when (tmp_216_fu_691_p3(0) = '1') else 
        add_ln170_11_fu_685_p2;
    select_ln171_4_fu_827_p3 <= 
        ap_const_lv12_0 when (tmp_218_fu_819_p3(0) = '1') else 
        add_ln170_12_fu_813_p2;
    select_ln171_5_fu_955_p3 <= 
        ap_const_lv12_0 when (tmp_220_fu_947_p3(0) = '1') else 
        add_ln170_13_fu_941_p2;
    select_ln171_6_fu_1083_p3 <= 
        ap_const_lv12_0 when (tmp_222_fu_1075_p3(0) = '1') else 
        add_ln170_14_fu_1069_p2;
    select_ln171_7_fu_1211_p3 <= 
        ap_const_lv12_0 when (tmp_224_fu_1203_p3(0) = '1') else 
        add_ln170_15_fu_1197_p2;
    select_ln171_fu_315_p3 <= 
        ap_const_lv12_0 when (tmp_210_fu_307_p3(0) = '1') else 
        add_ln170_8_fu_301_p2;
    select_ln172_1_fu_471_p3 <= 
        ap_const_lv10_3FF when (icmp_ln172_8_fu_465_p2(0) = '1') else 
        trunc_ln171_8_fu_451_p1;
    select_ln172_2_fu_599_p3 <= 
        ap_const_lv10_3FF when (icmp_ln172_9_fu_593_p2(0) = '1') else 
        trunc_ln171_9_fu_579_p1;
    select_ln172_3_fu_727_p3 <= 
        ap_const_lv10_3FF when (icmp_ln172_10_fu_721_p2(0) = '1') else 
        trunc_ln171_10_fu_707_p1;
    select_ln172_4_fu_855_p3 <= 
        ap_const_lv10_3FF when (icmp_ln172_11_fu_849_p2(0) = '1') else 
        trunc_ln171_11_fu_835_p1;
    select_ln172_5_fu_983_p3 <= 
        ap_const_lv10_3FF when (icmp_ln172_12_fu_977_p2(0) = '1') else 
        trunc_ln171_12_fu_963_p1;
    select_ln172_6_fu_1111_p3 <= 
        ap_const_lv10_3FF when (icmp_ln172_13_fu_1105_p2(0) = '1') else 
        trunc_ln171_13_fu_1091_p1;
    select_ln172_7_fu_1239_p3 <= 
        ap_const_lv10_3FF when (icmp_ln172_14_fu_1233_p2(0) = '1') else 
        trunc_ln171_14_fu_1219_p1;
    select_ln172_fu_343_p3 <= 
        ap_const_lv10_3FF when (icmp_ln172_fu_337_p2(0) = '1') else 
        trunc_ln171_fu_323_p1;
    select_ln850_64_fu_411_p3 <= 
        select_ln851_1_fu_403_p3 when (icmp_ln850_64_fu_373_p2(0) = '1') else 
        sext_ln850_64_fu_369_p1;
    select_ln850_65_fu_539_p3 <= 
        select_ln851_2_fu_531_p3 when (icmp_ln850_65_fu_501_p2(0) = '1') else 
        sext_ln850_65_fu_497_p1;
    select_ln850_66_fu_667_p3 <= 
        select_ln851_3_fu_659_p3 when (icmp_ln850_66_fu_629_p2(0) = '1') else 
        sext_ln850_66_fu_625_p1;
    select_ln850_67_fu_795_p3 <= 
        select_ln851_4_fu_787_p3 when (icmp_ln850_67_fu_757_p2(0) = '1') else 
        sext_ln850_67_fu_753_p1;
    select_ln850_68_fu_923_p3 <= 
        select_ln851_5_fu_915_p3 when (icmp_ln850_68_fu_885_p2(0) = '1') else 
        sext_ln850_68_fu_881_p1;
    select_ln850_69_fu_1051_p3 <= 
        select_ln851_6_fu_1043_p3 when (icmp_ln850_69_fu_1013_p2(0) = '1') else 
        sext_ln850_69_fu_1009_p1;
    select_ln850_70_fu_1179_p3 <= 
        select_ln851_7_fu_1171_p3 when (icmp_ln850_70_fu_1141_p2(0) = '1') else 
        sext_ln850_70_fu_1137_p1;
    select_ln850_fu_283_p3 <= 
        select_ln851_fu_275_p3 when (icmp_ln850_fu_245_p2(0) = '1') else 
        sext_ln850_fu_241_p1;
    select_ln851_1_fu_403_p3 <= 
        sext_ln850_64_fu_369_p1 when (icmp_ln851_1_fu_391_p2(0) = '1') else 
        add_ln700_64_fu_397_p2;
    select_ln851_2_fu_531_p3 <= 
        sext_ln850_65_fu_497_p1 when (icmp_ln851_2_fu_519_p2(0) = '1') else 
        add_ln700_65_fu_525_p2;
    select_ln851_3_fu_659_p3 <= 
        sext_ln850_66_fu_625_p1 when (icmp_ln851_3_fu_647_p2(0) = '1') else 
        add_ln700_66_fu_653_p2;
    select_ln851_4_fu_787_p3 <= 
        sext_ln850_67_fu_753_p1 when (icmp_ln851_4_fu_775_p2(0) = '1') else 
        add_ln700_67_fu_781_p2;
    select_ln851_5_fu_915_p3 <= 
        sext_ln850_68_fu_881_p1 when (icmp_ln851_5_fu_903_p2(0) = '1') else 
        add_ln700_68_fu_909_p2;
    select_ln851_6_fu_1043_p3 <= 
        sext_ln850_69_fu_1009_p1 when (icmp_ln851_6_fu_1031_p2(0) = '1') else 
        add_ln700_69_fu_1037_p2;
    select_ln851_7_fu_1171_p3 <= 
        sext_ln850_70_fu_1137_p1 when (icmp_ln851_7_fu_1159_p2(0) = '1') else 
        add_ln700_70_fu_1165_p2;
    select_ln851_fu_275_p3 <= 
        sext_ln850_fu_241_p1 when (icmp_ln851_fu_263_p2(0) = '1') else 
        add_ln700_fu_269_p2;
        sext_ln850_64_fu_369_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_129_fu_359_p4),13));

        sext_ln850_65_fu_497_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_130_fu_487_p4),13));

        sext_ln850_66_fu_625_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_131_fu_615_p4),13));

        sext_ln850_67_fu_753_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_132_fu_743_p4),13));

        sext_ln850_68_fu_881_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_133_fu_871_p4),13));

        sext_ln850_69_fu_1009_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_134_fu_999_p4),13));

        sext_ln850_70_fu_1137_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_135_fu_1127_p4),13));

        sext_ln850_fu_241_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_s_fu_231_p4),13));

    shl_ln1118_64_fu_351_p3 <= (data_1_V_read & ap_const_lv10_0);
    shl_ln1118_65_fu_479_p3 <= (data_2_V_read & ap_const_lv10_0);
    shl_ln1118_66_fu_607_p3 <= (data_3_V_read & ap_const_lv10_0);
    shl_ln1118_67_fu_735_p3 <= (data_4_V_read & ap_const_lv10_0);
    shl_ln1118_68_fu_863_p3 <= (data_5_V_read & ap_const_lv10_0);
    shl_ln1118_69_fu_1119_p3 <= (data_7_V_read & ap_const_lv10_0);
    shl_ln1118_s_fu_991_p3 <= (data_6_V_read & ap_const_lv10_0);
    shl_ln_fu_223_p3 <= (data_0_V_read & ap_const_lv10_0);
    sigmoid_table14_address0 <= zext_ln173_fu_1247_p1(10 - 1 downto 0);
    sigmoid_table14_address1 <= zext_ln173_1_fu_1251_p1(10 - 1 downto 0);
    sigmoid_table14_address2 <= zext_ln173_2_fu_1255_p1(10 - 1 downto 0);
    sigmoid_table14_address3 <= zext_ln173_3_fu_1259_p1(10 - 1 downto 0);
    sigmoid_table14_address4 <= zext_ln173_4_fu_1263_p1(10 - 1 downto 0);
    sigmoid_table14_address5 <= zext_ln173_5_fu_1267_p1(10 - 1 downto 0);
    sigmoid_table14_address6 <= zext_ln173_6_fu_1271_p1(10 - 1 downto 0);
    sigmoid_table14_address7 <= zext_ln173_7_fu_1275_p1(10 - 1 downto 0);

    sigmoid_table14_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if (((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            sigmoid_table14_ce0 <= ap_const_logic_1;
        else 
            sigmoid_table14_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    sigmoid_table14_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if (((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            sigmoid_table14_ce1 <= ap_const_logic_1;
        else 
            sigmoid_table14_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    sigmoid_table14_ce2_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if (((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            sigmoid_table14_ce2 <= ap_const_logic_1;
        else 
            sigmoid_table14_ce2 <= ap_const_logic_0;
        end if; 
    end process;


    sigmoid_table14_ce3_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if (((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            sigmoid_table14_ce3 <= ap_const_logic_1;
        else 
            sigmoid_table14_ce3 <= ap_const_logic_0;
        end if; 
    end process;


    sigmoid_table14_ce4_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if (((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            sigmoid_table14_ce4 <= ap_const_logic_1;
        else 
            sigmoid_table14_ce4 <= ap_const_logic_0;
        end if; 
    end process;


    sigmoid_table14_ce5_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if (((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            sigmoid_table14_ce5 <= ap_const_logic_1;
        else 
            sigmoid_table14_ce5 <= ap_const_logic_0;
        end if; 
    end process;


    sigmoid_table14_ce6_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if (((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            sigmoid_table14_ce6 <= ap_const_logic_1;
        else 
            sigmoid_table14_ce6 <= ap_const_logic_0;
        end if; 
    end process;


    sigmoid_table14_ce7_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if (((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            sigmoid_table14_ce7 <= ap_const_logic_1;
        else 
            sigmoid_table14_ce7 <= ap_const_logic_0;
        end if; 
    end process;

    tmp_129_fu_359_p4 <= data_1_V_read(15 downto 4);
    tmp_130_fu_487_p4 <= data_2_V_read(15 downto 4);
    tmp_131_fu_615_p4 <= data_3_V_read(15 downto 4);
    tmp_132_fu_743_p4 <= data_4_V_read(15 downto 4);
    tmp_133_fu_871_p4 <= data_5_V_read(15 downto 4);
    tmp_134_fu_999_p4 <= data_6_V_read(15 downto 4);
    tmp_135_fu_1127_p4 <= data_7_V_read(15 downto 4);
    tmp_210_fu_307_p3 <= add_ln170_fu_295_p2(12 downto 12);
    tmp_211_fu_327_p4 <= select_ln171_fu_315_p3(11 downto 10);
    tmp_212_fu_435_p3 <= add_ln170_1_fu_423_p2(12 downto 12);
    tmp_213_fu_455_p4 <= select_ln171_1_fu_443_p3(11 downto 10);
    tmp_214_fu_563_p3 <= add_ln170_2_fu_551_p2(12 downto 12);
    tmp_215_fu_583_p4 <= select_ln171_2_fu_571_p3(11 downto 10);
    tmp_216_fu_691_p3 <= add_ln170_3_fu_679_p2(12 downto 12);
    tmp_217_fu_711_p4 <= select_ln171_3_fu_699_p3(11 downto 10);
    tmp_218_fu_819_p3 <= add_ln170_4_fu_807_p2(12 downto 12);
    tmp_219_fu_839_p4 <= select_ln171_4_fu_827_p3(11 downto 10);
    tmp_220_fu_947_p3 <= add_ln170_5_fu_935_p2(12 downto 12);
    tmp_221_fu_967_p4 <= select_ln171_5_fu_955_p3(11 downto 10);
    tmp_222_fu_1075_p3 <= add_ln170_6_fu_1063_p2(12 downto 12);
    tmp_223_fu_1095_p4 <= select_ln171_6_fu_1083_p3(11 downto 10);
    tmp_224_fu_1203_p3 <= add_ln170_7_fu_1191_p2(12 downto 12);
    tmp_225_fu_1223_p4 <= select_ln171_7_fu_1211_p3(11 downto 10);
    tmp_s_fu_231_p4 <= data_0_V_read(15 downto 4);
    trunc_ln170_10_fu_675_p1 <= select_ln850_66_fu_667_p3(12 - 1 downto 0);
    trunc_ln170_11_fu_803_p1 <= select_ln850_67_fu_795_p3(12 - 1 downto 0);
    trunc_ln170_12_fu_931_p1 <= select_ln850_68_fu_923_p3(12 - 1 downto 0);
    trunc_ln170_13_fu_1059_p1 <= select_ln850_69_fu_1051_p3(12 - 1 downto 0);
    trunc_ln170_14_fu_1187_p1 <= select_ln850_70_fu_1179_p3(12 - 1 downto 0);
    trunc_ln170_8_fu_419_p1 <= select_ln850_64_fu_411_p3(12 - 1 downto 0);
    trunc_ln170_9_fu_547_p1 <= select_ln850_65_fu_539_p3(12 - 1 downto 0);
    trunc_ln170_fu_291_p1 <= select_ln850_fu_283_p3(12 - 1 downto 0);
    trunc_ln171_10_fu_707_p1 <= select_ln171_3_fu_699_p3(10 - 1 downto 0);
    trunc_ln171_11_fu_835_p1 <= select_ln171_4_fu_827_p3(10 - 1 downto 0);
    trunc_ln171_12_fu_963_p1 <= select_ln171_5_fu_955_p3(10 - 1 downto 0);
    trunc_ln171_13_fu_1091_p1 <= select_ln171_6_fu_1083_p3(10 - 1 downto 0);
    trunc_ln171_14_fu_1219_p1 <= select_ln171_7_fu_1211_p3(10 - 1 downto 0);
    trunc_ln171_8_fu_451_p1 <= select_ln171_1_fu_443_p3(10 - 1 downto 0);
    trunc_ln171_9_fu_579_p1 <= select_ln171_2_fu_571_p3(10 - 1 downto 0);
    trunc_ln171_fu_323_p1 <= select_ln171_fu_315_p3(10 - 1 downto 0);
    trunc_ln851_71_fu_379_p1 <= data_1_V_read(4 - 1 downto 0);
    trunc_ln851_72_fu_507_p1 <= data_2_V_read(4 - 1 downto 0);
    trunc_ln851_73_fu_635_p1 <= data_3_V_read(4 - 1 downto 0);
    trunc_ln851_74_fu_763_p1 <= data_4_V_read(4 - 1 downto 0);
    trunc_ln851_75_fu_891_p1 <= data_5_V_read(4 - 1 downto 0);
    trunc_ln851_76_fu_1019_p1 <= data_6_V_read(4 - 1 downto 0);
    trunc_ln851_77_fu_1147_p1 <= data_7_V_read(4 - 1 downto 0);
    trunc_ln851_fu_251_p1 <= data_0_V_read(4 - 1 downto 0);
    zext_ln173_1_fu_1251_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln172_1_reg_1364),64));
    zext_ln173_2_fu_1255_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln172_2_reg_1369),64));
    zext_ln173_3_fu_1259_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln172_3_reg_1374),64));
    zext_ln173_4_fu_1263_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln172_4_reg_1379),64));
    zext_ln173_5_fu_1267_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln172_5_reg_1384),64));
    zext_ln173_6_fu_1271_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln172_6_reg_1389),64));
    zext_ln173_7_fu_1275_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln172_7_reg_1394),64));
    zext_ln173_fu_1247_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln172_reg_1359),64));
    zext_ln703_15_fu_1283_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sigmoid_table14_q1),16));
    zext_ln703_16_fu_1287_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sigmoid_table14_q2),16));
    zext_ln703_17_fu_1291_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sigmoid_table14_q3),16));
    zext_ln703_18_fu_1295_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sigmoid_table14_q4),16));
    zext_ln703_19_fu_1299_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sigmoid_table14_q5),16));
    zext_ln703_20_fu_1303_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sigmoid_table14_q6),16));
    zext_ln703_21_fu_1307_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sigmoid_table14_q7),16));
    zext_ln703_fu_1279_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sigmoid_table14_q0),16));
end behav;
