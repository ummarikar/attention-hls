// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module dense_simple_0_0_1 (
        ap_clk,
        ap_rst,
        data_0_V_read,
        ap_return_0,
        ap_return_1,
        ap_return_2,
        ap_return_3,
        ap_return_4,
        ap_return_5,
        ap_return_6,
        ap_return_7,
        ap_return_8,
        ap_return_9,
        ap_return_10,
        ap_return_11,
        ap_return_12,
        ap_return_13,
        ap_return_14,
        ap_return_15,
        ap_return_16,
        ap_return_17,
        ap_return_18,
        ap_return_19,
        ap_return_20,
        ap_return_21,
        ap_return_22,
        ap_return_23,
        ap_return_24,
        ap_return_25,
        ap_return_26,
        ap_return_27,
        ap_return_28,
        ap_return_29,
        ap_return_30,
        ap_return_31,
        ap_ce
);


input   ap_clk;
input   ap_rst;
input  [15:0] data_0_V_read;
output  [15:0] ap_return_0;
output  [15:0] ap_return_1;
output  [15:0] ap_return_2;
output  [15:0] ap_return_3;
output  [15:0] ap_return_4;
output  [15:0] ap_return_5;
output  [15:0] ap_return_6;
output  [15:0] ap_return_7;
output  [15:0] ap_return_8;
output  [15:0] ap_return_9;
output  [15:0] ap_return_10;
output  [15:0] ap_return_11;
output  [15:0] ap_return_12;
output  [15:0] ap_return_13;
output  [15:0] ap_return_14;
output  [15:0] ap_return_15;
output  [15:0] ap_return_16;
output  [15:0] ap_return_17;
output  [15:0] ap_return_18;
output  [15:0] ap_return_19;
output  [15:0] ap_return_20;
output  [15:0] ap_return_21;
output  [15:0] ap_return_22;
output  [15:0] ap_return_23;
output  [15:0] ap_return_24;
output  [15:0] ap_return_25;
output  [15:0] ap_return_26;
output  [15:0] ap_return_27;
output  [15:0] ap_return_28;
output  [15:0] ap_return_29;
output  [15:0] ap_return_30;
output  [15:0] ap_return_31;
input   ap_ce;

reg[15:0] ap_return_0;
reg[15:0] ap_return_1;
reg[15:0] ap_return_2;
reg[15:0] ap_return_3;
reg[15:0] ap_return_4;
reg[15:0] ap_return_5;
reg[15:0] ap_return_6;
reg[15:0] ap_return_7;
reg[15:0] ap_return_8;
reg[15:0] ap_return_9;
reg[15:0] ap_return_10;
reg[15:0] ap_return_11;
reg[15:0] ap_return_12;
reg[15:0] ap_return_13;
reg[15:0] ap_return_14;
reg[15:0] ap_return_15;
reg[15:0] ap_return_16;
reg[15:0] ap_return_17;
reg[15:0] ap_return_18;
reg[15:0] ap_return_19;
reg[15:0] ap_return_20;
reg[15:0] ap_return_21;
reg[15:0] ap_return_22;
reg[15:0] ap_return_23;
reg[15:0] ap_return_24;
reg[15:0] ap_return_25;
reg[15:0] ap_return_26;
reg[15:0] ap_return_27;
reg[15:0] ap_return_28;
reg[15:0] ap_return_29;
reg[15:0] ap_return_30;
reg[15:0] ap_return_31;

reg  signed [15:0] data_0_V_read_8_reg_5109;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
reg   [15:0] trunc_ln_reg_5117;
reg   [15:0] trunc_ln708_1_reg_5122;
reg   [15:0] trunc_ln708_2_reg_5127;
reg   [15:0] trunc_ln708_3_reg_5132;
reg   [15:0] trunc_ln708_4_reg_5137;
reg   [15:0] trunc_ln708_5_reg_5142;
reg   [15:0] trunc_ln708_6_reg_5147;
reg   [15:0] trunc_ln708_7_reg_5152;
reg   [15:0] trunc_ln708_8_reg_5157;
reg   [15:0] trunc_ln708_10_reg_5162;
reg   [15:0] trunc_ln708_11_reg_5167;
reg   [14:0] trunc_ln708_18_reg_5172;
reg   [14:0] trunc_ln708_19_reg_5177;
reg   [14:0] trunc_ln708_21_reg_5182;
reg   [15:0] trunc_ln708_15_reg_5187;
reg   [15:0] trunc_ln708_17_reg_5192;
reg   [13:0] trunc_ln708_22_reg_5197;
reg   [14:0] trunc_ln708_24_reg_5202;
reg   [15:0] trunc_ln708_20_reg_5207;
reg   [14:0] trunc_ln708_32_reg_5212;
reg   [13:0] trunc_ln708_33_reg_5217;
reg   [15:0] trunc_ln708_23_reg_5222;
reg   [14:0] trunc_ln708_34_reg_5227;
reg   [15:0] trunc_ln708_25_reg_5232;
reg   [15:0] trunc_ln708_26_reg_5237;
reg   [15:0] trunc_ln708_27_reg_5242;
reg   [15:0] trunc_ln708_28_reg_5247;
reg   [15:0] trunc_ln708_29_reg_5252;
reg   [15:0] trunc_ln708_30_reg_5257;
reg   [15:0] trunc_ln708_31_reg_5262;
wire  signed [15:0] mul_ln1118_50_fu_192_p0;
wire  signed [24:0] sext_ln1116_cast2_fu_4281_p1;
wire    ap_block_pp0_stage0;
wire  signed [15:0] mul_ln1118_49_fu_193_p0;
wire  signed [15:0] mul_ln1118_46_fu_194_p0;
wire  signed [25:0] sext_ln1116_cast_fu_4291_p1;
wire  signed [15:0] mul_ln1118_65_fu_195_p0;
wire  signed [15:0] mul_ln1118_42_fu_196_p0;
wire  signed [15:0] mul_ln1118_61_fu_197_p0;
wire  signed [15:0] mul_ln1118_51_fu_198_p0;
wire  signed [15:0] mul_ln1118_58_fu_199_p0;
wire  signed [23:0] sext_ln1116_cast3_fu_4275_p1;
wire  signed [15:0] mul_ln1118_56_fu_200_p0;
wire  signed [15:0] mul_ln1118_47_fu_201_p0;
wire  signed [15:0] mul_ln1118_39_fu_202_p0;
wire  signed [15:0] mul_ln1118_62_fu_203_p0;
wire  signed [15:0] mul_ln1118_fu_204_p0;
wire  signed [15:0] mul_ln1118_41_fu_205_p0;
wire  signed [15:0] mul_ln1118_57_fu_206_p0;
wire  signed [15:0] mul_ln1118_66_fu_207_p0;
wire  signed [15:0] mul_ln1118_44_fu_208_p0;
wire  signed [15:0] mul_ln1118_43_fu_209_p0;
wire  signed [15:0] mul_ln1118_59_fu_210_p0;
wire  signed [15:0] mul_ln1118_52_fu_211_p0;
wire  signed [15:0] mul_ln1118_60_fu_212_p0;
wire  signed [15:0] mul_ln1118_67_fu_213_p0;
wire  signed [15:0] mul_ln1118_48_fu_214_p0;
wire  signed [15:0] mul_ln1118_54_fu_215_p0;
wire  signed [15:0] mul_ln1118_45_fu_216_p0;
wire  signed [15:0] mul_ln1118_63_fu_218_p0;
wire  signed [15:0] mul_ln1118_53_fu_219_p0;
wire  signed [15:0] mul_ln1118_40_fu_220_p0;
wire  signed [15:0] mul_ln1118_64_fu_221_p0;
wire  signed [15:0] mul_ln1118_55_fu_222_p0;
wire  signed [15:0] sext_ln1116_cast3_fu_4275_p0;
wire  signed [15:0] sext_ln1116_cast2_fu_4281_p0;
wire  signed [15:0] sext_ln1116_cast_fu_4291_p0;
wire   [25:0] mul_ln1118_fu_204_p2;
wire   [25:0] mul_ln1118_39_fu_202_p2;
wire   [25:0] mul_ln1118_40_fu_220_p2;
wire   [25:0] mul_ln1118_41_fu_205_p2;
wire   [25:0] mul_ln1118_42_fu_196_p2;
wire   [25:0] mul_ln1118_43_fu_209_p2;
wire   [25:0] mul_ln1118_44_fu_208_p2;
wire   [25:0] mul_ln1118_45_fu_216_p2;
wire   [25:0] mul_ln1118_46_fu_194_p2;
wire   [25:0] mul_ln1118_47_fu_201_p2;
wire   [25:0] mul_ln1118_48_fu_214_p2;
wire   [24:0] mul_ln1118_49_fu_193_p2;
wire   [24:0] mul_ln1118_50_fu_192_p2;
wire   [24:0] mul_ln1118_51_fu_198_p2;
wire   [25:0] mul_ln1118_52_fu_211_p2;
wire   [25:0] mul_ln1118_53_fu_219_p2;
wire   [23:0] mul_ln1118_54_fu_215_p2;
wire   [24:0] mul_ln1118_55_fu_222_p2;
wire   [25:0] mul_ln1118_56_fu_200_p2;
wire   [24:0] mul_ln1118_57_fu_206_p2;
wire   [23:0] mul_ln1118_58_fu_199_p2;
wire   [25:0] mul_ln1118_59_fu_210_p2;
wire   [24:0] mul_ln1118_60_fu_212_p2;
wire   [25:0] mul_ln1118_61_fu_197_p2;
wire   [25:0] mul_ln1118_62_fu_203_p2;
wire   [25:0] mul_ln1118_63_fu_218_p2;
wire   [25:0] mul_ln1118_64_fu_221_p2;
wire   [25:0] mul_ln1118_65_fu_195_p2;
wire   [25:0] mul_ln1118_66_fu_207_p2;
wire   [25:0] mul_ln1118_67_fu_213_p2;
wire   [19:0] shl_ln_fu_4617_p3;
wire   [16:0] shl_ln1118_s_fu_4628_p3;
wire  signed [20:0] sext_ln1118_40_fu_4635_p1;
wire  signed [20:0] sext_ln1118_fu_4624_p1;
wire   [20:0] sub_ln1118_fu_4639_p2;
wire   [10:0] trunc_ln708_s_fu_4645_p4;
wire   [22:0] shl_ln1118_70_fu_4668_p3;
wire  signed [23:0] sext_ln1118_42_fu_4675_p1;
wire   [17:0] shl_ln1118_71_fu_4685_p3;
wire   [23:0] sub_ln1118_1_fu_4679_p2;
wire  signed [23:0] sext_ln1118_43_fu_4692_p1;
wire   [23:0] sub_ln1118_2_fu_4696_p2;
wire   [13:0] tmp_fu_4702_p4;
wire  signed [11:0] sext_ln1118_41_fu_4655_p1;
wire   [11:0] add_ln703_86_fu_4776_p2;
wire  signed [15:0] sext_ln708_fu_4659_p1;
wire  signed [15:0] sext_ln708_1_fu_4662_p1;
wire  signed [15:0] sext_ln708_2_fu_4665_p1;
wire  signed [14:0] sext_ln1118_46_fu_4712_p1;
wire   [14:0] add_ln703_93_fu_4819_p2;
wire  signed [14:0] sext_ln1118_44_fu_4716_p1;
wire   [14:0] add_ln703_95_fu_4834_p2;
wire  signed [15:0] sext_ln708_3_fu_4719_p1;
wire  signed [15:0] sext_ln708_4_fu_4722_p1;
wire  signed [14:0] sext_ln1118_45_fu_4725_p1;
wire   [14:0] add_ln703_99_fu_4861_p2;
wire  signed [15:0] sext_ln708_5_fu_4728_p1;
wire   [15:0] add_ln703_fu_4731_p2;
wire   [15:0] add_ln703_78_fu_4736_p2;
wire   [15:0] add_ln703_79_fu_4741_p2;
wire   [15:0] add_ln703_80_fu_4746_p2;
wire   [15:0] add_ln703_81_fu_4751_p2;
wire   [15:0] add_ln703_82_fu_4756_p2;
wire   [15:0] add_ln703_83_fu_4761_p2;
wire   [15:0] add_ln703_84_fu_4766_p2;
wire   [15:0] add_ln703_85_fu_4771_p2;
wire   [15:0] zext_ln703_fu_4782_p1;
wire   [15:0] add_ln703_87_fu_4786_p2;
wire   [15:0] add_ln703_88_fu_4791_p2;
wire   [15:0] add_ln703_89_fu_4796_p2;
wire   [15:0] add_ln703_90_fu_4802_p2;
wire   [15:0] add_ln703_91_fu_4808_p2;
wire   [15:0] add_ln703_92_fu_4814_p2;
wire  signed [15:0] sext_ln703_10_fu_4825_p1;
wire   [15:0] add_ln703_94_fu_4829_p2;
wire  signed [15:0] sext_ln703_fu_4840_p1;
wire   [15:0] add_ln703_96_fu_4844_p2;
wire   [15:0] add_ln703_97_fu_4850_p2;
wire   [15:0] add_ln703_98_fu_4855_p2;
wire  signed [15:0] sext_ln703_9_fu_4867_p1;
wire   [15:0] add_ln703_100_fu_4871_p2;
wire   [15:0] add_ln703_101_fu_4876_p2;
wire   [15:0] add_ln703_102_fu_4882_p2;
wire   [15:0] add_ln703_103_fu_4887_p2;
wire   [15:0] add_ln703_104_fu_4892_p2;
wire   [15:0] add_ln703_105_fu_4897_p2;
wire   [15:0] add_ln703_106_fu_4902_p2;
wire   [15:0] add_ln703_107_fu_4907_p2;
wire   [15:0] add_ln703_108_fu_4912_p2;
reg    ap_ce_reg;
reg   [15:0] ap_return_0_int_reg;
reg   [15:0] ap_return_1_int_reg;
reg   [15:0] ap_return_2_int_reg;
reg   [15:0] ap_return_3_int_reg;
reg   [15:0] ap_return_4_int_reg;
reg   [15:0] ap_return_5_int_reg;
reg   [15:0] ap_return_6_int_reg;
reg   [15:0] ap_return_7_int_reg;
reg   [15:0] ap_return_8_int_reg;
reg   [15:0] ap_return_9_int_reg;
reg   [15:0] ap_return_10_int_reg;
reg   [15:0] ap_return_11_int_reg;
reg   [15:0] ap_return_12_int_reg;
reg   [15:0] ap_return_13_int_reg;
reg   [15:0] ap_return_14_int_reg;
reg   [15:0] ap_return_15_int_reg;
reg   [15:0] ap_return_16_int_reg;
reg   [15:0] ap_return_17_int_reg;
reg   [15:0] ap_return_18_int_reg;
reg   [15:0] ap_return_19_int_reg;
reg   [15:0] ap_return_20_int_reg;
reg   [15:0] ap_return_21_int_reg;
reg   [15:0] ap_return_22_int_reg;
reg   [15:0] ap_return_23_int_reg;
reg   [15:0] ap_return_24_int_reg;
reg   [15:0] ap_return_25_int_reg;
reg   [15:0] ap_return_26_int_reg;
reg   [15:0] ap_return_27_int_reg;
reg   [15:0] ap_return_28_int_reg;
reg   [15:0] ap_return_29_int_reg;
reg   [15:0] ap_return_30_int_reg;
reg   [15:0] ap_return_31_int_reg;

always @ (posedge ap_clk) begin
    ap_ce_reg <= ap_ce;
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce_reg)) begin
        ap_return_0_int_reg <= add_ln703_fu_4731_p2;
        ap_return_10_int_reg <= add_ln703_87_fu_4786_p2;
        ap_return_11_int_reg <= add_ln703_88_fu_4791_p2;
        ap_return_12_int_reg <= add_ln703_89_fu_4796_p2;
        ap_return_13_int_reg <= add_ln703_90_fu_4802_p2;
        ap_return_14_int_reg <= add_ln703_91_fu_4808_p2;
        ap_return_15_int_reg <= add_ln703_92_fu_4814_p2;
        ap_return_16_int_reg <= sext_ln703_10_fu_4825_p1;
        ap_return_17_int_reg <= add_ln703_94_fu_4829_p2;
        ap_return_18_int_reg <= sext_ln703_fu_4840_p1;
        ap_return_19_int_reg <= add_ln703_96_fu_4844_p2;
        ap_return_1_int_reg <= add_ln703_78_fu_4736_p2;
        ap_return_20_int_reg <= add_ln703_97_fu_4850_p2;
        ap_return_21_int_reg <= add_ln703_98_fu_4855_p2;
        ap_return_22_int_reg <= sext_ln703_9_fu_4867_p1;
        ap_return_23_int_reg <= add_ln703_100_fu_4871_p2;
        ap_return_24_int_reg <= add_ln703_101_fu_4876_p2;
        ap_return_25_int_reg <= add_ln703_102_fu_4882_p2;
        ap_return_26_int_reg <= add_ln703_103_fu_4887_p2;
        ap_return_27_int_reg <= add_ln703_104_fu_4892_p2;
        ap_return_28_int_reg <= add_ln703_105_fu_4897_p2;
        ap_return_29_int_reg <= add_ln703_106_fu_4902_p2;
        ap_return_2_int_reg <= add_ln703_79_fu_4741_p2;
        ap_return_30_int_reg <= add_ln703_107_fu_4907_p2;
        ap_return_31_int_reg <= add_ln703_108_fu_4912_p2;
        ap_return_3_int_reg <= add_ln703_80_fu_4746_p2;
        ap_return_4_int_reg <= add_ln703_81_fu_4751_p2;
        ap_return_5_int_reg <= add_ln703_82_fu_4756_p2;
        ap_return_6_int_reg <= add_ln703_83_fu_4761_p2;
        ap_return_7_int_reg <= add_ln703_84_fu_4766_p2;
        ap_return_8_int_reg <= add_ln703_85_fu_4771_p2;
        ap_return_9_int_reg[11 : 0] <= zext_ln703_fu_4782_p1[11 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1))) begin
        data_0_V_read_8_reg_5109 <= data_0_V_read;
        trunc_ln708_10_reg_5162 <= {{mul_ln1118_47_fu_201_p2[25:10]}};
        trunc_ln708_11_reg_5167 <= {{mul_ln1118_48_fu_214_p2[25:10]}};
        trunc_ln708_15_reg_5187 <= {{mul_ln1118_52_fu_211_p2[25:10]}};
        trunc_ln708_17_reg_5192 <= {{mul_ln1118_53_fu_219_p2[25:10]}};
        trunc_ln708_18_reg_5172 <= {{mul_ln1118_49_fu_193_p2[24:10]}};
        trunc_ln708_19_reg_5177 <= {{mul_ln1118_50_fu_192_p2[24:10]}};
        trunc_ln708_1_reg_5122 <= {{mul_ln1118_39_fu_202_p2[25:10]}};
        trunc_ln708_20_reg_5207 <= {{mul_ln1118_56_fu_200_p2[25:10]}};
        trunc_ln708_21_reg_5182 <= {{mul_ln1118_51_fu_198_p2[24:10]}};
        trunc_ln708_22_reg_5197 <= {{mul_ln1118_54_fu_215_p2[23:10]}};
        trunc_ln708_23_reg_5222 <= {{mul_ln1118_59_fu_210_p2[25:10]}};
        trunc_ln708_24_reg_5202 <= {{mul_ln1118_55_fu_222_p2[24:10]}};
        trunc_ln708_25_reg_5232 <= {{mul_ln1118_61_fu_197_p2[25:10]}};
        trunc_ln708_26_reg_5237 <= {{mul_ln1118_62_fu_203_p2[25:10]}};
        trunc_ln708_27_reg_5242 <= {{mul_ln1118_63_fu_218_p2[25:10]}};
        trunc_ln708_28_reg_5247 <= {{mul_ln1118_64_fu_221_p2[25:10]}};
        trunc_ln708_29_reg_5252 <= {{mul_ln1118_65_fu_195_p2[25:10]}};
        trunc_ln708_2_reg_5127 <= {{mul_ln1118_40_fu_220_p2[25:10]}};
        trunc_ln708_30_reg_5257 <= {{mul_ln1118_66_fu_207_p2[25:10]}};
        trunc_ln708_31_reg_5262 <= {{mul_ln1118_67_fu_213_p2[25:10]}};
        trunc_ln708_32_reg_5212 <= {{mul_ln1118_57_fu_206_p2[24:10]}};
        trunc_ln708_33_reg_5217 <= {{mul_ln1118_58_fu_199_p2[23:10]}};
        trunc_ln708_34_reg_5227 <= {{mul_ln1118_60_fu_212_p2[24:10]}};
        trunc_ln708_3_reg_5132 <= {{mul_ln1118_41_fu_205_p2[25:10]}};
        trunc_ln708_4_reg_5137 <= {{mul_ln1118_42_fu_196_p2[25:10]}};
        trunc_ln708_5_reg_5142 <= {{mul_ln1118_43_fu_209_p2[25:10]}};
        trunc_ln708_6_reg_5147 <= {{mul_ln1118_44_fu_208_p2[25:10]}};
        trunc_ln708_7_reg_5152 <= {{mul_ln1118_45_fu_216_p2[25:10]}};
        trunc_ln708_8_reg_5157 <= {{mul_ln1118_46_fu_194_p2[25:10]}};
        trunc_ln_reg_5117 <= {{mul_ln1118_fu_204_p2[25:10]}};
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return_0 = ap_return_0_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return_0 = add_ln703_fu_4731_p2;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return_1 = ap_return_1_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return_1 = add_ln703_78_fu_4736_p2;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return_10 = ap_return_10_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return_10 = add_ln703_87_fu_4786_p2;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return_11 = ap_return_11_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return_11 = add_ln703_88_fu_4791_p2;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return_12 = ap_return_12_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return_12 = add_ln703_89_fu_4796_p2;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return_13 = ap_return_13_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return_13 = add_ln703_90_fu_4802_p2;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return_14 = ap_return_14_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return_14 = add_ln703_91_fu_4808_p2;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return_15 = ap_return_15_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return_15 = add_ln703_92_fu_4814_p2;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return_16 = ap_return_16_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return_16 = sext_ln703_10_fu_4825_p1;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return_17 = ap_return_17_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return_17 = add_ln703_94_fu_4829_p2;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return_18 = ap_return_18_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return_18 = sext_ln703_fu_4840_p1;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return_19 = ap_return_19_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return_19 = add_ln703_96_fu_4844_p2;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return_2 = ap_return_2_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return_2 = add_ln703_79_fu_4741_p2;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return_20 = ap_return_20_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return_20 = add_ln703_97_fu_4850_p2;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return_21 = ap_return_21_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return_21 = add_ln703_98_fu_4855_p2;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return_22 = ap_return_22_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return_22 = sext_ln703_9_fu_4867_p1;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return_23 = ap_return_23_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return_23 = add_ln703_100_fu_4871_p2;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return_24 = ap_return_24_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return_24 = add_ln703_101_fu_4876_p2;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return_25 = ap_return_25_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return_25 = add_ln703_102_fu_4882_p2;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return_26 = ap_return_26_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return_26 = add_ln703_103_fu_4887_p2;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return_27 = ap_return_27_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return_27 = add_ln703_104_fu_4892_p2;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return_28 = ap_return_28_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return_28 = add_ln703_105_fu_4897_p2;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return_29 = ap_return_29_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return_29 = add_ln703_106_fu_4902_p2;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return_3 = ap_return_3_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return_3 = add_ln703_80_fu_4746_p2;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return_30 = ap_return_30_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return_30 = add_ln703_107_fu_4907_p2;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return_31 = ap_return_31_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return_31 = add_ln703_108_fu_4912_p2;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return_4 = ap_return_4_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return_4 = add_ln703_81_fu_4751_p2;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return_5 = ap_return_5_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return_5 = add_ln703_82_fu_4756_p2;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return_6 = ap_return_6_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return_6 = add_ln703_83_fu_4761_p2;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return_7 = ap_return_7_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return_7 = add_ln703_84_fu_4766_p2;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return_8 = ap_return_8_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return_8 = add_ln703_85_fu_4771_p2;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return_9 = ap_return_9_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return_9 = zext_ln703_fu_4782_p1;
    end
end

assign add_ln703_100_fu_4871_p2 = (trunc_ln708_23_reg_5222 + 16'd367);

assign add_ln703_101_fu_4876_p2 = ($signed(sext_ln708_5_fu_4728_p1) + $signed(16'd373));

assign add_ln703_102_fu_4882_p2 = ($signed(trunc_ln708_25_reg_5232) + $signed(16'd65277));

assign add_ln703_103_fu_4887_p2 = (trunc_ln708_26_reg_5237 + 16'd200);

assign add_ln703_104_fu_4892_p2 = (trunc_ln708_27_reg_5242 + 16'd7);

assign add_ln703_105_fu_4897_p2 = (trunc_ln708_28_reg_5247 + 16'd750);

assign add_ln703_106_fu_4902_p2 = (trunc_ln708_29_reg_5252 + 16'd1374);

assign add_ln703_107_fu_4907_p2 = (trunc_ln708_30_reg_5257 + 16'd1043);

assign add_ln703_108_fu_4912_p2 = (trunc_ln708_31_reg_5262 + 16'd420);

assign add_ln703_78_fu_4736_p2 = (trunc_ln708_1_reg_5122 + 16'd203);

assign add_ln703_79_fu_4741_p2 = (trunc_ln708_2_reg_5127 + 16'd128);

assign add_ln703_80_fu_4746_p2 = (trunc_ln708_3_reg_5132 + 16'd279);

assign add_ln703_81_fu_4751_p2 = ($signed(trunc_ln708_4_reg_5137) + $signed(16'd65384));

assign add_ln703_82_fu_4756_p2 = (trunc_ln708_5_reg_5142 + 16'd417);

assign add_ln703_83_fu_4761_p2 = (trunc_ln708_6_reg_5147 + 16'd169);

assign add_ln703_84_fu_4766_p2 = (trunc_ln708_7_reg_5152 + 16'd669);

assign add_ln703_85_fu_4771_p2 = (trunc_ln708_8_reg_5157 + 16'd987);

assign add_ln703_86_fu_4776_p2 = ($signed(sext_ln1118_41_fu_4655_p1) + $signed(12'd1092));

assign add_ln703_87_fu_4786_p2 = (trunc_ln708_10_reg_5162 + 16'd121);

assign add_ln703_88_fu_4791_p2 = (trunc_ln708_11_reg_5167 + 16'd1023);

assign add_ln703_89_fu_4796_p2 = ($signed(sext_ln708_fu_4659_p1) + $signed(16'd954));

assign add_ln703_90_fu_4802_p2 = ($signed(sext_ln708_1_fu_4662_p1) + $signed(16'd318));

assign add_ln703_91_fu_4808_p2 = ($signed(sext_ln708_2_fu_4665_p1) + $signed(16'd1195));

assign add_ln703_92_fu_4814_p2 = (trunc_ln708_15_reg_5187 + 16'd1504);

assign add_ln703_93_fu_4819_p2 = ($signed(sext_ln1118_46_fu_4712_p1) + $signed(15'd128));

assign add_ln703_94_fu_4829_p2 = ($signed(trunc_ln708_17_reg_5192) + $signed(16'd65460));

assign add_ln703_95_fu_4834_p2 = ($signed(sext_ln1118_44_fu_4716_p1) + $signed(15'd118));

assign add_ln703_96_fu_4844_p2 = ($signed(sext_ln708_3_fu_4719_p1) + $signed(16'd126));

assign add_ln703_97_fu_4850_p2 = ($signed(trunc_ln708_20_reg_5207) + $signed(16'd65523));

assign add_ln703_98_fu_4855_p2 = ($signed(sext_ln708_4_fu_4722_p1) + $signed(16'd119));

assign add_ln703_99_fu_4861_p2 = ($signed(sext_ln1118_45_fu_4725_p1) + $signed(15'd53));

assign add_ln703_fu_4731_p2 = (trunc_ln_reg_5117 + 16'd68);

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign mul_ln1118_39_fu_202_p0 = sext_ln1116_cast_fu_4291_p1;

assign mul_ln1118_39_fu_202_p2 = ($signed(mul_ln1118_39_fu_202_p0) * $signed('h1C1));

assign mul_ln1118_40_fu_220_p0 = sext_ln1116_cast_fu_4291_p1;

assign mul_ln1118_40_fu_220_p2 = ($signed(mul_ln1118_40_fu_220_p0) * $signed('h6EB));

assign mul_ln1118_41_fu_205_p0 = sext_ln1116_cast_fu_4291_p1;

assign mul_ln1118_41_fu_205_p2 = ($signed(mul_ln1118_41_fu_205_p0) * $signed(-'h1E1));

assign mul_ln1118_42_fu_196_p0 = sext_ln1116_cast_fu_4291_p1;

assign mul_ln1118_42_fu_196_p2 = ($signed(mul_ln1118_42_fu_196_p0) * $signed('h298));

assign mul_ln1118_43_fu_209_p0 = sext_ln1116_cast_fu_4291_p1;

assign mul_ln1118_43_fu_209_p2 = ($signed(mul_ln1118_43_fu_209_p0) * $signed(-'h6F8));

assign mul_ln1118_44_fu_208_p0 = sext_ln1116_cast_fu_4291_p1;

assign mul_ln1118_44_fu_208_p2 = ($signed(mul_ln1118_44_fu_208_p0) * $signed('h148));

assign mul_ln1118_45_fu_216_p0 = sext_ln1116_cast_fu_4291_p1;

assign mul_ln1118_45_fu_216_p2 = ($signed(mul_ln1118_45_fu_216_p0) * $signed('h247));

assign mul_ln1118_46_fu_194_p0 = sext_ln1116_cast_fu_4291_p1;

assign mul_ln1118_46_fu_194_p2 = ($signed(mul_ln1118_46_fu_194_p0) * $signed(-'h6AB));

assign mul_ln1118_47_fu_201_p0 = sext_ln1116_cast_fu_4291_p1;

assign mul_ln1118_47_fu_201_p2 = ($signed(mul_ln1118_47_fu_201_p0) * $signed('h164));

assign mul_ln1118_48_fu_214_p0 = sext_ln1116_cast_fu_4291_p1;

assign mul_ln1118_48_fu_214_p2 = ($signed(mul_ln1118_48_fu_214_p0) * $signed('h150));

assign mul_ln1118_49_fu_193_p0 = sext_ln1116_cast2_fu_4281_p1;

assign mul_ln1118_49_fu_193_p2 = ($signed(mul_ln1118_49_fu_193_p0) * $signed(-'h92));

assign mul_ln1118_50_fu_192_p0 = sext_ln1116_cast2_fu_4281_p1;

assign mul_ln1118_50_fu_192_p2 = ($signed(mul_ln1118_50_fu_192_p0) * $signed('h86));

assign mul_ln1118_51_fu_198_p0 = sext_ln1116_cast2_fu_4281_p1;

assign mul_ln1118_51_fu_198_p2 = ($signed(mul_ln1118_51_fu_198_p0) * $signed('hD4));

assign mul_ln1118_52_fu_211_p0 = sext_ln1116_cast_fu_4291_p1;

assign mul_ln1118_52_fu_211_p2 = ($signed(mul_ln1118_52_fu_211_p0) * $signed(-'h470));

assign mul_ln1118_53_fu_219_p0 = sext_ln1116_cast_fu_4291_p1;

assign mul_ln1118_53_fu_219_p2 = ($signed(mul_ln1118_53_fu_219_p0) * $signed('h1A2));

assign mul_ln1118_54_fu_215_p0 = sext_ln1116_cast3_fu_4275_p1;

assign mul_ln1118_54_fu_215_p2 = ($signed(mul_ln1118_54_fu_215_p0) * $signed(-'h73));

assign mul_ln1118_55_fu_222_p0 = sext_ln1116_cast2_fu_4281_p1;

assign mul_ln1118_55_fu_222_p2 = ($signed(mul_ln1118_55_fu_222_p0) * $signed('hD0));

assign mul_ln1118_56_fu_200_p0 = sext_ln1116_cast_fu_4291_p1;

assign mul_ln1118_56_fu_200_p2 = ($signed(mul_ln1118_56_fu_200_p0) * $signed(-'h166));

assign mul_ln1118_57_fu_206_p0 = sext_ln1116_cast2_fu_4281_p1;

assign mul_ln1118_57_fu_206_p2 = ($signed(mul_ln1118_57_fu_206_p0) * $signed('hE1));

assign mul_ln1118_58_fu_199_p0 = sext_ln1116_cast3_fu_4275_p1;

assign mul_ln1118_58_fu_199_p2 = ($signed(mul_ln1118_58_fu_199_p0) * $signed('h7A));

assign mul_ln1118_59_fu_210_p0 = sext_ln1116_cast_fu_4291_p1;

assign mul_ln1118_59_fu_210_p2 = ($signed(mul_ln1118_59_fu_210_p0) * $signed('h117));

assign mul_ln1118_60_fu_212_p0 = sext_ln1116_cast2_fu_4281_p1;

assign mul_ln1118_60_fu_212_p2 = ($signed(mul_ln1118_60_fu_212_p0) * $signed('hB5));

assign mul_ln1118_61_fu_197_p0 = sext_ln1116_cast_fu_4291_p1;

assign mul_ln1118_61_fu_197_p2 = ($signed(mul_ln1118_61_fu_197_p0) * $signed('h3BB));

assign mul_ln1118_62_fu_203_p0 = sext_ln1116_cast_fu_4291_p1;

assign mul_ln1118_62_fu_203_p2 = ($signed(mul_ln1118_62_fu_203_p0) * $signed('h5DF));

assign mul_ln1118_63_fu_218_p0 = sext_ln1116_cast_fu_4291_p1;

assign mul_ln1118_63_fu_218_p2 = ($signed(mul_ln1118_63_fu_218_p0) * $signed('h3A8));

assign mul_ln1118_64_fu_221_p0 = sext_ln1116_cast_fu_4291_p1;

assign mul_ln1118_64_fu_221_p2 = ($signed(mul_ln1118_64_fu_221_p0) * $signed('h6BD));

assign mul_ln1118_65_fu_195_p0 = sext_ln1116_cast_fu_4291_p1;

assign mul_ln1118_65_fu_195_p2 = ($signed(mul_ln1118_65_fu_195_p0) * $signed(-'h333));

assign mul_ln1118_66_fu_207_p0 = sext_ln1116_cast_fu_4291_p1;

assign mul_ln1118_66_fu_207_p2 = ($signed(mul_ln1118_66_fu_207_p0) * $signed(-'h209));

assign mul_ln1118_67_fu_213_p0 = sext_ln1116_cast_fu_4291_p1;

assign mul_ln1118_67_fu_213_p2 = ($signed(mul_ln1118_67_fu_213_p0) * $signed(-'h458));

assign mul_ln1118_fu_204_p0 = sext_ln1116_cast_fu_4291_p1;

assign mul_ln1118_fu_204_p2 = ($signed(mul_ln1118_fu_204_p0) * $signed('h2C5));

assign sext_ln1116_cast2_fu_4281_p0 = data_0_V_read;

assign sext_ln1116_cast2_fu_4281_p1 = sext_ln1116_cast2_fu_4281_p0;

assign sext_ln1116_cast3_fu_4275_p0 = data_0_V_read;

assign sext_ln1116_cast3_fu_4275_p1 = sext_ln1116_cast3_fu_4275_p0;

assign sext_ln1116_cast_fu_4291_p0 = data_0_V_read;

assign sext_ln1116_cast_fu_4291_p1 = sext_ln1116_cast_fu_4291_p0;

assign sext_ln1118_40_fu_4635_p1 = $signed(shl_ln1118_s_fu_4628_p3);

assign sext_ln1118_41_fu_4655_p1 = $signed(trunc_ln708_s_fu_4645_p4);

assign sext_ln1118_42_fu_4675_p1 = $signed(shl_ln1118_70_fu_4668_p3);

assign sext_ln1118_43_fu_4692_p1 = $signed(shl_ln1118_71_fu_4685_p3);

assign sext_ln1118_44_fu_4716_p1 = $signed(trunc_ln708_22_reg_5197);

assign sext_ln1118_45_fu_4725_p1 = $signed(trunc_ln708_33_reg_5217);

assign sext_ln1118_46_fu_4712_p1 = $signed(tmp_fu_4702_p4);

assign sext_ln1118_fu_4624_p1 = $signed(shl_ln_fu_4617_p3);

assign sext_ln703_10_fu_4825_p1 = $signed(add_ln703_93_fu_4819_p2);

assign sext_ln703_9_fu_4867_p1 = $signed(add_ln703_99_fu_4861_p2);

assign sext_ln703_fu_4840_p1 = $signed(add_ln703_95_fu_4834_p2);

assign sext_ln708_1_fu_4662_p1 = $signed(trunc_ln708_19_reg_5177);

assign sext_ln708_2_fu_4665_p1 = $signed(trunc_ln708_21_reg_5182);

assign sext_ln708_3_fu_4719_p1 = $signed(trunc_ln708_24_reg_5202);

assign sext_ln708_4_fu_4722_p1 = $signed(trunc_ln708_32_reg_5212);

assign sext_ln708_5_fu_4728_p1 = $signed(trunc_ln708_34_reg_5227);

assign sext_ln708_fu_4659_p1 = $signed(trunc_ln708_18_reg_5172);

assign shl_ln1118_70_fu_4668_p3 = {{data_0_V_read_8_reg_5109}, {7'd0}};

assign shl_ln1118_71_fu_4685_p3 = {{data_0_V_read_8_reg_5109}, {2'd0}};

assign shl_ln1118_s_fu_4628_p3 = {{data_0_V_read_8_reg_5109}, {1'd0}};

assign shl_ln_fu_4617_p3 = {{data_0_V_read_8_reg_5109}, {4'd0}};

assign sub_ln1118_1_fu_4679_p2 = ($signed(24'd0) - $signed(sext_ln1118_42_fu_4675_p1));

assign sub_ln1118_2_fu_4696_p2 = ($signed(sub_ln1118_1_fu_4679_p2) - $signed(sext_ln1118_43_fu_4692_p1));

assign sub_ln1118_fu_4639_p2 = ($signed(sext_ln1118_40_fu_4635_p1) - $signed(sext_ln1118_fu_4624_p1));

assign tmp_fu_4702_p4 = {{sub_ln1118_2_fu_4696_p2[23:10]}};

assign trunc_ln708_s_fu_4645_p4 = {{sub_ln1118_fu_4639_p2[20:10]}};

assign zext_ln703_fu_4782_p1 = add_ln703_86_fu_4776_p2;

always @ (posedge ap_clk) begin
    ap_return_9_int_reg[15:12] <= 4'b0000;
end

endmodule //dense_simple_0_0_1
