// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _dense_simple_0_0_2_HH_
#define _dense_simple_0_0_2_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct dense_simple_0_0_2 : public sc_module {
    // Port declarations 13
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<4> > data_V_address0;
    sc_out< sc_logic > data_V_ce0;
    sc_in< sc_lv<16> > data_V_q0;
    sc_out< sc_lv<4> > data_V_address1;
    sc_out< sc_logic > data_V_ce1;
    sc_in< sc_lv<16> > data_V_q1;
    sc_out< sc_lv<16> > ap_return;


    // Module declarations
    dense_simple_0_0_2(sc_module_name name);
    SC_HAS_PROCESS(dense_simple_0_0_2);

    ~dense_simple_0_0_2();

    sc_trace_file* mVcdFile;

    sc_signal< sc_lv<8> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage7;
    sc_signal< bool > ap_block_state8_pp0_stage7_iter0;
    sc_signal< bool > ap_block_pp0_stage7_11001;
    sc_signal< bool > ap_block_state1_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state9_pp0_stage0_iter1;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<16> > trunc_ln_reg_1406;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage1;
    sc_signal< bool > ap_block_state2_pp0_stage1_iter0;
    sc_signal< bool > ap_block_state10_pp0_stage1_iter1;
    sc_signal< bool > ap_block_pp0_stage1_11001;
    sc_signal< sc_lv<15> > trunc_ln708_s_reg_1411;
    sc_signal< sc_lv<16> > trunc_ln708_2_reg_1426;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage2;
    sc_signal< bool > ap_block_state3_pp0_stage2_iter0;
    sc_signal< bool > ap_block_pp0_stage2_11001;
    sc_signal< sc_lv<15> > trunc_ln708_16_reg_1431;
    sc_signal< sc_lv<15> > trunc_ln708_17_reg_1446;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage3;
    sc_signal< bool > ap_block_state4_pp0_stage3_iter0;
    sc_signal< bool > ap_block_pp0_stage3_11001;
    sc_signal< sc_lv<16> > trunc_ln708_5_reg_1451;
    sc_signal< sc_lv<16> > trunc_ln708_6_reg_1466;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage4;
    sc_signal< bool > ap_block_state5_pp0_stage4_iter0;
    sc_signal< bool > ap_block_pp0_stage4_11001;
    sc_signal< sc_lv<16> > trunc_ln708_7_reg_1471;
    sc_signal< sc_lv<16> > add_ln703_74_fu_1200_p2;
    sc_signal< sc_lv<16> > add_ln703_74_reg_1486;
    sc_signal< sc_lv<16> > trunc_ln708_8_reg_1491;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage5;
    sc_signal< bool > ap_block_state6_pp0_stage5_iter0;
    sc_signal< bool > ap_block_pp0_stage5_11001;
    sc_signal< sc_lv<16> > trunc_ln708_9_reg_1496;
    sc_signal< sc_lv<16> > add_ln703_64_fu_1244_p2;
    sc_signal< sc_lv<16> > add_ln703_64_reg_1511;
    sc_signal< sc_lv<16> > trunc_ln708_10_reg_1516;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage6;
    sc_signal< bool > ap_block_state7_pp0_stage6_iter0;
    sc_signal< bool > ap_block_pp0_stage6_11001;
    sc_signal< sc_lv<16> > trunc_ln708_11_reg_1521;
    sc_signal< sc_lv<16> > trunc_ln708_12_reg_1536;
    sc_signal< sc_lv<16> > trunc_ln708_13_reg_1541;
    sc_signal< sc_lv<16> > add_ln703_67_fu_1318_p2;
    sc_signal< sc_lv<16> > add_ln703_67_reg_1556;
    sc_signal< sc_lv<16> > trunc_ln708_14_reg_1561;
    sc_signal< sc_lv<16> > trunc_ln708_15_reg_1566;
    sc_signal< sc_lv<16> > add_ln703_69_fu_1354_p2;
    sc_signal< sc_lv<16> > add_ln703_69_reg_1571;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0_reg;
    sc_signal< bool > ap_block_pp0_stage1_subdone;
    sc_signal< bool > ap_block_pp0_stage7_subdone;
    sc_signal< bool > ap_block_pp0_stage1;
    sc_signal< bool > ap_block_pp0_stage2;
    sc_signal< bool > ap_block_pp0_stage3;
    sc_signal< bool > ap_block_pp0_stage4;
    sc_signal< bool > ap_block_pp0_stage5;
    sc_signal< bool > ap_block_pp0_stage6;
    sc_signal< bool > ap_block_pp0_stage7;
    sc_signal< sc_lv<16> > mul_ln1118_30_fu_251_p0;
    sc_signal< sc_lv<16> > mul_ln1118_31_fu_252_p0;
    sc_signal< sc_lv<16> > mul_ln1118_38_fu_253_p0;
    sc_signal< sc_lv<16> > mul_ln1118_28_fu_254_p0;
    sc_signal< sc_lv<16> > mul_ln1118_fu_255_p0;
    sc_signal< sc_lv<16> > mul_ln1118_27_fu_256_p0;
    sc_signal< sc_lv<16> > mul_ln1118_35_fu_257_p0;
    sc_signal< sc_lv<16> > mul_ln1118_33_fu_258_p0;
    sc_signal< sc_lv<16> > mul_ln1118_32_fu_259_p0;
    sc_signal< sc_lv<16> > mul_ln1118_37_fu_260_p0;
    sc_signal< sc_lv<16> > mul_ln1118_36_fu_261_p0;
    sc_signal< sc_lv<16> > mul_ln1118_24_fu_262_p0;
    sc_signal< sc_lv<16> > mul_ln1118_26_fu_263_p0;
    sc_signal< sc_lv<16> > mul_ln1118_29_fu_264_p0;
    sc_signal< sc_lv<16> > mul_ln1118_25_fu_265_p0;
    sc_signal< sc_lv<16> > mul_ln1118_34_fu_266_p0;
    sc_signal< sc_lv<26> > mul_ln1118_fu_255_p2;
    sc_signal< sc_lv<25> > mul_ln1118_24_fu_262_p2;
    sc_signal< sc_lv<26> > mul_ln1118_25_fu_265_p2;
    sc_signal< sc_lv<25> > mul_ln1118_26_fu_263_p2;
    sc_signal< sc_lv<25> > mul_ln1118_27_fu_256_p2;
    sc_signal< sc_lv<26> > mul_ln1118_28_fu_254_p2;
    sc_signal< sc_lv<26> > mul_ln1118_29_fu_264_p2;
    sc_signal< sc_lv<26> > mul_ln1118_30_fu_251_p2;
    sc_signal< sc_lv<16> > sext_ln708_2_fu_1161_p1;
    sc_signal< sc_lv<16> > add_ln703_73_fu_1194_p2;
    sc_signal< sc_lv<16> > sext_ln708_1_fu_1158_p1;
    sc_signal< sc_lv<26> > mul_ln1118_31_fu_252_p2;
    sc_signal< sc_lv<26> > mul_ln1118_32_fu_259_p2;
    sc_signal< sc_lv<16> > add_ln703_63_fu_1240_p2;
    sc_signal< sc_lv<16> > add_ln703_fu_1236_p2;
    sc_signal< sc_lv<26> > mul_ln1118_33_fu_258_p2;
    sc_signal< sc_lv<26> > mul_ln1118_34_fu_266_p2;
    sc_signal< sc_lv<26> > mul_ln1118_35_fu_257_p2;
    sc_signal< sc_lv<26> > mul_ln1118_36_fu_261_p2;
    sc_signal< sc_lv<16> > add_ln703_66_fu_1314_p2;
    sc_signal< sc_lv<16> > add_ln703_65_fu_1310_p2;
    sc_signal< sc_lv<26> > mul_ln1118_37_fu_260_p2;
    sc_signal< sc_lv<26> > mul_ln1118_38_fu_253_p2;
    sc_signal< sc_lv<16> > add_ln703_70_fu_1365_p2;
    sc_signal< sc_lv<16> > sext_ln708_fu_1358_p1;
    sc_signal< sc_lv<16> > add_ln703_72_fu_1374_p2;
    sc_signal< sc_lv<16> > add_ln703_75_fu_1379_p2;
    sc_signal< sc_lv<16> > add_ln703_71_fu_1369_p2;
    sc_signal< sc_lv<16> > add_ln703_76_fu_1384_p2;
    sc_signal< sc_lv<16> > add_ln703_68_fu_1361_p2;
    sc_signal< sc_lv<8> > ap_NS_fsm;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_idle_pp0_1to1;
    sc_signal< sc_logic > ap_idle_pp0_0to0;
    sc_signal< sc_logic > ap_reset_idle_pp0;
    sc_signal< bool > ap_block_pp0_stage2_subdone;
    sc_signal< bool > ap_block_pp0_stage3_subdone;
    sc_signal< bool > ap_block_pp0_stage4_subdone;
    sc_signal< bool > ap_block_pp0_stage5_subdone;
    sc_signal< bool > ap_block_pp0_stage6_subdone;
    sc_signal< sc_logic > ap_enable_pp0;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<8> ap_ST_fsm_pp0_stage0;
    static const sc_lv<8> ap_ST_fsm_pp0_stage1;
    static const sc_lv<8> ap_ST_fsm_pp0_stage2;
    static const sc_lv<8> ap_ST_fsm_pp0_stage3;
    static const sc_lv<8> ap_ST_fsm_pp0_stage4;
    static const sc_lv<8> ap_ST_fsm_pp0_stage5;
    static const sc_lv<8> ap_ST_fsm_pp0_stage6;
    static const sc_lv<8> ap_ST_fsm_pp0_stage7;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_0;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<64> ap_const_lv64_0;
    static const sc_lv<64> ap_const_lv64_1;
    static const sc_lv<64> ap_const_lv64_2;
    static const sc_lv<64> ap_const_lv64_3;
    static const sc_lv<64> ap_const_lv64_4;
    static const sc_lv<64> ap_const_lv64_5;
    static const sc_lv<64> ap_const_lv64_6;
    static const sc_lv<64> ap_const_lv64_7;
    static const sc_lv<64> ap_const_lv64_8;
    static const sc_lv<64> ap_const_lv64_9;
    static const sc_lv<64> ap_const_lv64_A;
    static const sc_lv<64> ap_const_lv64_B;
    static const sc_lv<64> ap_const_lv64_C;
    static const sc_lv<64> ap_const_lv64_D;
    static const sc_lv<64> ap_const_lv64_E;
    static const sc_lv<64> ap_const_lv64_F;
    static const sc_lv<26> ap_const_lv26_3FFF8C1;
    static const sc_lv<26> ap_const_lv26_1290;
    static const sc_lv<26> ap_const_lv26_73F;
    static const sc_lv<26> ap_const_lv26_3FFFC69;
    static const sc_lv<26> ap_const_lv26_A5E;
    static const sc_lv<25> ap_const_lv25_1FFFF74;
    static const sc_lv<26> ap_const_lv26_4AF;
    static const sc_lv<26> ap_const_lv26_3FFF662;
    static const sc_lv<26> ap_const_lv26_2CE;
    static const sc_lv<26> ap_const_lv26_3AE;
    static const sc_lv<26> ap_const_lv26_3FFFCC1;
    static const sc_lv<25> ap_const_lv25_AB;
    static const sc_lv<25> ap_const_lv25_C8;
    static const sc_lv<26> ap_const_lv26_3FFFB84;
    static const sc_lv<26> ap_const_lv26_32A;
    static const sc_lv<26> ap_const_lv26_3FFFE19;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_19;
    static const sc_lv<32> ap_const_lv32_18;
    static const sc_lv<16> ap_const_lv16_FF60;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_add_ln703_63_fu_1240_p2();
    void thread_add_ln703_64_fu_1244_p2();
    void thread_add_ln703_65_fu_1310_p2();
    void thread_add_ln703_66_fu_1314_p2();
    void thread_add_ln703_67_fu_1318_p2();
    void thread_add_ln703_68_fu_1361_p2();
    void thread_add_ln703_69_fu_1354_p2();
    void thread_add_ln703_70_fu_1365_p2();
    void thread_add_ln703_71_fu_1369_p2();
    void thread_add_ln703_72_fu_1374_p2();
    void thread_add_ln703_73_fu_1194_p2();
    void thread_add_ln703_74_fu_1200_p2();
    void thread_add_ln703_75_fu_1379_p2();
    void thread_add_ln703_76_fu_1384_p2();
    void thread_add_ln703_fu_1236_p2();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_pp0_stage1();
    void thread_ap_CS_fsm_pp0_stage2();
    void thread_ap_CS_fsm_pp0_stage3();
    void thread_ap_CS_fsm_pp0_stage4();
    void thread_ap_CS_fsm_pp0_stage5();
    void thread_ap_CS_fsm_pp0_stage6();
    void thread_ap_CS_fsm_pp0_stage7();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_pp0_stage1();
    void thread_ap_block_pp0_stage1_11001();
    void thread_ap_block_pp0_stage1_subdone();
    void thread_ap_block_pp0_stage2();
    void thread_ap_block_pp0_stage2_11001();
    void thread_ap_block_pp0_stage2_subdone();
    void thread_ap_block_pp0_stage3();
    void thread_ap_block_pp0_stage3_11001();
    void thread_ap_block_pp0_stage3_subdone();
    void thread_ap_block_pp0_stage4();
    void thread_ap_block_pp0_stage4_11001();
    void thread_ap_block_pp0_stage4_subdone();
    void thread_ap_block_pp0_stage5();
    void thread_ap_block_pp0_stage5_11001();
    void thread_ap_block_pp0_stage5_subdone();
    void thread_ap_block_pp0_stage6();
    void thread_ap_block_pp0_stage6_11001();
    void thread_ap_block_pp0_stage6_subdone();
    void thread_ap_block_pp0_stage7();
    void thread_ap_block_pp0_stage7_11001();
    void thread_ap_block_pp0_stage7_subdone();
    void thread_ap_block_state10_pp0_stage1_iter1();
    void thread_ap_block_state1_pp0_stage0_iter0();
    void thread_ap_block_state2_pp0_stage1_iter0();
    void thread_ap_block_state3_pp0_stage2_iter0();
    void thread_ap_block_state4_pp0_stage3_iter0();
    void thread_ap_block_state5_pp0_stage4_iter0();
    void thread_ap_block_state6_pp0_stage5_iter0();
    void thread_ap_block_state7_pp0_stage6_iter0();
    void thread_ap_block_state8_pp0_stage7_iter0();
    void thread_ap_block_state9_pp0_stage0_iter1();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_enable_reg_pp0_iter0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_idle_pp0_0to0();
    void thread_ap_idle_pp0_1to1();
    void thread_ap_ready();
    void thread_ap_reset_idle_pp0();
    void thread_ap_return();
    void thread_data_V_address0();
    void thread_data_V_address1();
    void thread_data_V_ce0();
    void thread_data_V_ce1();
    void thread_mul_ln1118_24_fu_262_p0();
    void thread_mul_ln1118_24_fu_262_p2();
    void thread_mul_ln1118_25_fu_265_p0();
    void thread_mul_ln1118_25_fu_265_p2();
    void thread_mul_ln1118_26_fu_263_p0();
    void thread_mul_ln1118_26_fu_263_p2();
    void thread_mul_ln1118_27_fu_256_p0();
    void thread_mul_ln1118_27_fu_256_p2();
    void thread_mul_ln1118_28_fu_254_p0();
    void thread_mul_ln1118_28_fu_254_p2();
    void thread_mul_ln1118_29_fu_264_p0();
    void thread_mul_ln1118_29_fu_264_p2();
    void thread_mul_ln1118_30_fu_251_p0();
    void thread_mul_ln1118_30_fu_251_p2();
    void thread_mul_ln1118_31_fu_252_p0();
    void thread_mul_ln1118_31_fu_252_p2();
    void thread_mul_ln1118_32_fu_259_p0();
    void thread_mul_ln1118_32_fu_259_p2();
    void thread_mul_ln1118_33_fu_258_p0();
    void thread_mul_ln1118_33_fu_258_p2();
    void thread_mul_ln1118_34_fu_266_p0();
    void thread_mul_ln1118_34_fu_266_p2();
    void thread_mul_ln1118_35_fu_257_p0();
    void thread_mul_ln1118_35_fu_257_p2();
    void thread_mul_ln1118_36_fu_261_p0();
    void thread_mul_ln1118_36_fu_261_p2();
    void thread_mul_ln1118_37_fu_260_p0();
    void thread_mul_ln1118_37_fu_260_p2();
    void thread_mul_ln1118_38_fu_253_p0();
    void thread_mul_ln1118_38_fu_253_p2();
    void thread_mul_ln1118_fu_255_p0();
    void thread_mul_ln1118_fu_255_p2();
    void thread_sext_ln708_1_fu_1158_p1();
    void thread_sext_ln708_2_fu_1161_p1();
    void thread_sext_ln708_fu_1358_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
