// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "td_dense.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic td_dense::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic td_dense::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<24> td_dense::ap_ST_fsm_state1 = "1";
const sc_lv<24> td_dense::ap_ST_fsm_state2 = "10";
const sc_lv<24> td_dense::ap_ST_fsm_state3 = "100";
const sc_lv<24> td_dense::ap_ST_fsm_state4 = "1000";
const sc_lv<24> td_dense::ap_ST_fsm_state5 = "10000";
const sc_lv<24> td_dense::ap_ST_fsm_state6 = "100000";
const sc_lv<24> td_dense::ap_ST_fsm_state7 = "1000000";
const sc_lv<24> td_dense::ap_ST_fsm_state8 = "10000000";
const sc_lv<24> td_dense::ap_ST_fsm_state9 = "100000000";
const sc_lv<24> td_dense::ap_ST_fsm_state10 = "1000000000";
const sc_lv<24> td_dense::ap_ST_fsm_state11 = "10000000000";
const sc_lv<24> td_dense::ap_ST_fsm_state12 = "100000000000";
const sc_lv<24> td_dense::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<24> td_dense::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<24> td_dense::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<24> td_dense::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<24> td_dense::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<24> td_dense::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<24> td_dense::ap_ST_fsm_state19 = "1000000000000000000";
const sc_lv<24> td_dense::ap_ST_fsm_state20 = "10000000000000000000";
const sc_lv<24> td_dense::ap_ST_fsm_state21 = "100000000000000000000";
const sc_lv<24> td_dense::ap_ST_fsm_state22 = "1000000000000000000000";
const sc_lv<24> td_dense::ap_ST_fsm_state23 = "10000000000000000000000";
const sc_lv<24> td_dense::ap_ST_fsm_state24 = "100000000000000000000000";
const sc_lv<32> td_dense::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> td_dense::ap_const_lv32_1 = "1";
const sc_lv<1> td_dense::ap_const_lv1_0 = "0";
const sc_lv<32> td_dense::ap_const_lv32_2 = "10";
const sc_lv<32> td_dense::ap_const_lv32_11 = "10001";
const sc_lv<32> td_dense::ap_const_lv32_15 = "10101";
const sc_lv<4> td_dense::ap_const_lv4_0 = "0000";
const sc_lv<32> td_dense::ap_const_lv32_14 = "10100";
const sc_lv<5> td_dense::ap_const_lv5_0 = "00000";
const sc_lv<32> td_dense::ap_const_lv32_17 = "10111";
const sc_lv<1> td_dense::ap_const_lv1_1 = "1";
const sc_lv<32> td_dense::ap_const_lv32_7 = "111";
const sc_lv<32> td_dense::ap_const_lv32_8 = "1000";
const sc_lv<32> td_dense::ap_const_lv32_9 = "1001";
const sc_lv<32> td_dense::ap_const_lv32_A = "1010";
const sc_lv<32> td_dense::ap_const_lv32_B = "1011";
const sc_lv<32> td_dense::ap_const_lv32_C = "1100";
const sc_lv<32> td_dense::ap_const_lv32_D = "1101";
const sc_lv<32> td_dense::ap_const_lv32_E = "1110";
const sc_lv<32> td_dense::ap_const_lv32_F = "1111";
const sc_lv<32> td_dense::ap_const_lv32_10 = "10000";
const sc_lv<32> td_dense::ap_const_lv32_12 = "10010";
const sc_lv<32> td_dense::ap_const_lv32_16 = "10110";
const sc_lv<3> td_dense::ap_const_lv3_6 = "110";
const sc_lv<3> td_dense::ap_const_lv3_5 = "101";
const sc_lv<3> td_dense::ap_const_lv3_4 = "100";
const sc_lv<3> td_dense::ap_const_lv3_3 = "11";
const sc_lv<3> td_dense::ap_const_lv3_2 = "10";
const sc_lv<3> td_dense::ap_const_lv3_1 = "1";
const sc_lv<3> td_dense::ap_const_lv3_0 = "000";
const sc_lv<3> td_dense::ap_const_lv3_7 = "111";
const sc_lv<4> td_dense::ap_const_lv4_8 = "1000";
const sc_lv<4> td_dense::ap_const_lv4_1 = "1";
const sc_lv<5> td_dense::ap_const_lv5_10 = "10000";
const sc_lv<5> td_dense::ap_const_lv5_1 = "1";
const bool td_dense::ap_const_boolean_1 = true;

td_dense::td_dense(sc_module_name name) : sc_module(name), mVcdFile(0) {
    acc_V_U = new td_dense_acc_V("acc_V_U");
    acc_V_U->clk(ap_clk);
    acc_V_U->reset(ap_rst);
    acc_V_U->address0(acc_V_address0);
    acc_V_U->ce0(acc_V_ce0);
    acc_V_U->we0(acc_V_we0);
    acc_V_U->d0(grp_tanh_fu_1224_ap_return);
    acc_V_U->q0(acc_V_q0);
    dense_input_V_U = new td_dense_dense_inlbW("dense_input_V_U");
    dense_input_V_U->clk(ap_clk);
    dense_input_V_U->reset(ap_rst);
    dense_input_V_U->address0(dense_input_V_address0);
    dense_input_V_U->ce0(dense_input_V_ce0);
    dense_input_V_U->we0(dense_input_V_we0);
    dense_input_V_U->d0(tmp_fu_1282_p130);
    dense_input_V_U->q0(dense_input_V_q0);
    dense_input_V_U->address1(grp_dense_simple_0_0_2_fu_1219_data_V_address1);
    dense_input_V_U->ce1(dense_input_V_ce1);
    dense_input_V_U->q1(dense_input_V_q1);
    grp_dense_simple_0_0_2_fu_1219 = new dense_simple_0_0_2("grp_dense_simple_0_0_2_fu_1219");
    grp_dense_simple_0_0_2_fu_1219->ap_clk(ap_clk);
    grp_dense_simple_0_0_2_fu_1219->ap_rst(ap_rst);
    grp_dense_simple_0_0_2_fu_1219->ap_start(grp_dense_simple_0_0_2_fu_1219_ap_start);
    grp_dense_simple_0_0_2_fu_1219->ap_done(grp_dense_simple_0_0_2_fu_1219_ap_done);
    grp_dense_simple_0_0_2_fu_1219->ap_idle(grp_dense_simple_0_0_2_fu_1219_ap_idle);
    grp_dense_simple_0_0_2_fu_1219->ap_ready(grp_dense_simple_0_0_2_fu_1219_ap_ready);
    grp_dense_simple_0_0_2_fu_1219->data_V_address0(grp_dense_simple_0_0_2_fu_1219_data_V_address0);
    grp_dense_simple_0_0_2_fu_1219->data_V_ce0(grp_dense_simple_0_0_2_fu_1219_data_V_ce0);
    grp_dense_simple_0_0_2_fu_1219->data_V_q0(dense_input_V_q0);
    grp_dense_simple_0_0_2_fu_1219->data_V_address1(grp_dense_simple_0_0_2_fu_1219_data_V_address1);
    grp_dense_simple_0_0_2_fu_1219->data_V_ce1(grp_dense_simple_0_0_2_fu_1219_data_V_ce1);
    grp_dense_simple_0_0_2_fu_1219->data_V_q1(dense_input_V_q1);
    grp_dense_simple_0_0_2_fu_1219->ap_return(grp_dense_simple_0_0_2_fu_1219_ap_return);
    grp_tanh_fu_1224 = new tanh("grp_tanh_fu_1224");
    grp_tanh_fu_1224->ap_clk(ap_clk);
    grp_tanh_fu_1224->ap_rst(ap_rst);
    grp_tanh_fu_1224->ap_start(grp_tanh_fu_1224_ap_start);
    grp_tanh_fu_1224->ap_done(grp_tanh_fu_1224_ap_done);
    grp_tanh_fu_1224->ap_idle(grp_tanh_fu_1224_ap_idle);
    grp_tanh_fu_1224->ap_ready(grp_tanh_fu_1224_ap_ready);
    grp_tanh_fu_1224->data_V_read(dense_acc_0_V_reg_2116);
    grp_tanh_fu_1224->ap_return(grp_tanh_fu_1224_ap_return);
    myproject_mux_128jbC_U1738 = new myproject_mux_128jbC<1,1,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16>("myproject_mux_128jbC_U1738");
    myproject_mux_128jbC_U1738->din0(input_0_V_read);
    myproject_mux_128jbC_U1738->din1(input_1_V_read);
    myproject_mux_128jbC_U1738->din2(input_2_V_read);
    myproject_mux_128jbC_U1738->din3(input_3_V_read);
    myproject_mux_128jbC_U1738->din4(input_4_V_read);
    myproject_mux_128jbC_U1738->din5(input_5_V_read);
    myproject_mux_128jbC_U1738->din6(input_6_V_read);
    myproject_mux_128jbC_U1738->din7(input_7_V_read);
    myproject_mux_128jbC_U1738->din8(input_8_V_read);
    myproject_mux_128jbC_U1738->din9(input_9_V_read);
    myproject_mux_128jbC_U1738->din10(input_10_V_read);
    myproject_mux_128jbC_U1738->din11(input_11_V_read);
    myproject_mux_128jbC_U1738->din12(input_12_V_read);
    myproject_mux_128jbC_U1738->din13(input_13_V_read);
    myproject_mux_128jbC_U1738->din14(input_14_V_read);
    myproject_mux_128jbC_U1738->din15(input_15_V_read);
    myproject_mux_128jbC_U1738->din16(input_16_V_read);
    myproject_mux_128jbC_U1738->din17(input_17_V_read);
    myproject_mux_128jbC_U1738->din18(input_18_V_read);
    myproject_mux_128jbC_U1738->din19(input_19_V_read);
    myproject_mux_128jbC_U1738->din20(input_20_V_read);
    myproject_mux_128jbC_U1738->din21(input_21_V_read);
    myproject_mux_128jbC_U1738->din22(input_22_V_read);
    myproject_mux_128jbC_U1738->din23(input_23_V_read);
    myproject_mux_128jbC_U1738->din24(input_24_V_read);
    myproject_mux_128jbC_U1738->din25(input_25_V_read);
    myproject_mux_128jbC_U1738->din26(input_26_V_read);
    myproject_mux_128jbC_U1738->din27(input_27_V_read);
    myproject_mux_128jbC_U1738->din28(input_28_V_read);
    myproject_mux_128jbC_U1738->din29(input_29_V_read);
    myproject_mux_128jbC_U1738->din30(input_30_V_read);
    myproject_mux_128jbC_U1738->din31(input_31_V_read);
    myproject_mux_128jbC_U1738->din32(input_32_V_read);
    myproject_mux_128jbC_U1738->din33(input_33_V_read);
    myproject_mux_128jbC_U1738->din34(input_34_V_read);
    myproject_mux_128jbC_U1738->din35(input_35_V_read);
    myproject_mux_128jbC_U1738->din36(input_36_V_read);
    myproject_mux_128jbC_U1738->din37(input_37_V_read);
    myproject_mux_128jbC_U1738->din38(input_38_V_read);
    myproject_mux_128jbC_U1738->din39(input_39_V_read);
    myproject_mux_128jbC_U1738->din40(input_40_V_read);
    myproject_mux_128jbC_U1738->din41(input_41_V_read);
    myproject_mux_128jbC_U1738->din42(input_42_V_read);
    myproject_mux_128jbC_U1738->din43(input_43_V_read);
    myproject_mux_128jbC_U1738->din44(input_44_V_read);
    myproject_mux_128jbC_U1738->din45(input_45_V_read);
    myproject_mux_128jbC_U1738->din46(input_46_V_read);
    myproject_mux_128jbC_U1738->din47(input_47_V_read);
    myproject_mux_128jbC_U1738->din48(input_48_V_read);
    myproject_mux_128jbC_U1738->din49(input_49_V_read);
    myproject_mux_128jbC_U1738->din50(input_50_V_read);
    myproject_mux_128jbC_U1738->din51(input_51_V_read);
    myproject_mux_128jbC_U1738->din52(input_52_V_read);
    myproject_mux_128jbC_U1738->din53(input_53_V_read);
    myproject_mux_128jbC_U1738->din54(input_54_V_read);
    myproject_mux_128jbC_U1738->din55(input_55_V_read);
    myproject_mux_128jbC_U1738->din56(input_56_V_read);
    myproject_mux_128jbC_U1738->din57(input_57_V_read);
    myproject_mux_128jbC_U1738->din58(input_58_V_read);
    myproject_mux_128jbC_U1738->din59(input_59_V_read);
    myproject_mux_128jbC_U1738->din60(input_60_V_read);
    myproject_mux_128jbC_U1738->din61(input_61_V_read);
    myproject_mux_128jbC_U1738->din62(input_62_V_read);
    myproject_mux_128jbC_U1738->din63(input_63_V_read);
    myproject_mux_128jbC_U1738->din64(input_64_V_read);
    myproject_mux_128jbC_U1738->din65(input_65_V_read);
    myproject_mux_128jbC_U1738->din66(input_66_V_read);
    myproject_mux_128jbC_U1738->din67(input_67_V_read);
    myproject_mux_128jbC_U1738->din68(input_68_V_read);
    myproject_mux_128jbC_U1738->din69(input_69_V_read);
    myproject_mux_128jbC_U1738->din70(input_70_V_read);
    myproject_mux_128jbC_U1738->din71(input_71_V_read);
    myproject_mux_128jbC_U1738->din72(input_72_V_read);
    myproject_mux_128jbC_U1738->din73(input_73_V_read);
    myproject_mux_128jbC_U1738->din74(input_74_V_read);
    myproject_mux_128jbC_U1738->din75(input_75_V_read);
    myproject_mux_128jbC_U1738->din76(input_76_V_read);
    myproject_mux_128jbC_U1738->din77(input_77_V_read);
    myproject_mux_128jbC_U1738->din78(input_78_V_read);
    myproject_mux_128jbC_U1738->din79(input_79_V_read);
    myproject_mux_128jbC_U1738->din80(input_80_V_read);
    myproject_mux_128jbC_U1738->din81(input_81_V_read);
    myproject_mux_128jbC_U1738->din82(input_82_V_read);
    myproject_mux_128jbC_U1738->din83(input_83_V_read);
    myproject_mux_128jbC_U1738->din84(input_84_V_read);
    myproject_mux_128jbC_U1738->din85(input_85_V_read);
    myproject_mux_128jbC_U1738->din86(input_86_V_read);
    myproject_mux_128jbC_U1738->din87(input_87_V_read);
    myproject_mux_128jbC_U1738->din88(input_88_V_read);
    myproject_mux_128jbC_U1738->din89(input_89_V_read);
    myproject_mux_128jbC_U1738->din90(input_90_V_read);
    myproject_mux_128jbC_U1738->din91(input_91_V_read);
    myproject_mux_128jbC_U1738->din92(input_92_V_read);
    myproject_mux_128jbC_U1738->din93(input_93_V_read);
    myproject_mux_128jbC_U1738->din94(input_94_V_read);
    myproject_mux_128jbC_U1738->din95(input_95_V_read);
    myproject_mux_128jbC_U1738->din96(input_96_V_read);
    myproject_mux_128jbC_U1738->din97(input_97_V_read);
    myproject_mux_128jbC_U1738->din98(input_98_V_read);
    myproject_mux_128jbC_U1738->din99(input_99_V_read);
    myproject_mux_128jbC_U1738->din100(input_100_V_read);
    myproject_mux_128jbC_U1738->din101(input_101_V_read);
    myproject_mux_128jbC_U1738->din102(input_102_V_read);
    myproject_mux_128jbC_U1738->din103(input_103_V_read);
    myproject_mux_128jbC_U1738->din104(input_104_V_read);
    myproject_mux_128jbC_U1738->din105(input_105_V_read);
    myproject_mux_128jbC_U1738->din106(input_106_V_read);
    myproject_mux_128jbC_U1738->din107(input_107_V_read);
    myproject_mux_128jbC_U1738->din108(input_108_V_read);
    myproject_mux_128jbC_U1738->din109(input_109_V_read);
    myproject_mux_128jbC_U1738->din110(input_110_V_read);
    myproject_mux_128jbC_U1738->din111(input_111_V_read);
    myproject_mux_128jbC_U1738->din112(input_112_V_read);
    myproject_mux_128jbC_U1738->din113(input_113_V_read);
    myproject_mux_128jbC_U1738->din114(input_114_V_read);
    myproject_mux_128jbC_U1738->din115(input_115_V_read);
    myproject_mux_128jbC_U1738->din116(input_116_V_read);
    myproject_mux_128jbC_U1738->din117(input_117_V_read);
    myproject_mux_128jbC_U1738->din118(input_118_V_read);
    myproject_mux_128jbC_U1738->din119(input_119_V_read);
    myproject_mux_128jbC_U1738->din120(input_120_V_read);
    myproject_mux_128jbC_U1738->din121(input_121_V_read);
    myproject_mux_128jbC_U1738->din122(input_122_V_read);
    myproject_mux_128jbC_U1738->din123(input_123_V_read);
    myproject_mux_128jbC_U1738->din124(input_124_V_read);
    myproject_mux_128jbC_U1738->din125(input_125_V_read);
    myproject_mux_128jbC_U1738->din126(input_126_V_read);
    myproject_mux_128jbC_U1738->din127(input_127_V_read);
    myproject_mux_128jbC_U1738->din128(tmp_fu_1282_p129);
    myproject_mux_128jbC_U1738->dout(tmp_fu_1282_p130);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_acc_V_address0);
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( zext_ln54_fu_1417_p1 );
    sensitive << ( zext_ln59_fu_1434_p1 );

    SC_METHOD(thread_acc_V_ce0);
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state21 );

    SC_METHOD(thread_acc_V_we0);
    sensitive << ( ap_CS_fsm_state21 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state14);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state15);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state16);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state17);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state18);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state19);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state21);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state22);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state23);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state24);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_NS_fsm_state19);
    sensitive << ( ap_NS_fsm );

    SC_METHOD(thread_ap_NS_fsm_state9);
    sensitive << ( ap_NS_fsm );

    SC_METHOD(thread_ap_block_state1);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( icmp_ln58_fu_1422_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( icmp_ln58_fu_1422_p2 );

    SC_METHOD(thread_dense_input_V_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( grp_dense_simple_0_0_2_fu_1219_data_V_address0 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( zext_ln42_fu_1272_p1 );

    SC_METHOD(thread_dense_input_V_ce0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( grp_dense_simple_0_0_2_fu_1219_data_V_ce0 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state17 );

    SC_METHOD(thread_dense_input_V_ce1);
    sensitive << ( grp_dense_simple_0_0_2_fu_1219_data_V_ce1 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state17 );

    SC_METHOD(thread_dense_input_V_we0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln39_fu_1256_p2 );

    SC_METHOD(thread_grp_dense_simple_0_0_2_fu_1219_ap_start);
    sensitive << ( grp_dense_simple_0_0_2_fu_1219_ap_start_reg );

    SC_METHOD(thread_grp_tanh_fu_1224_ap_start);
    sensitive << ( grp_tanh_fu_1224_ap_start_reg );

    SC_METHOD(thread_icmp_ln35_fu_1232_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( index_reg_1185 );

    SC_METHOD(thread_icmp_ln39_fu_1256_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( jj_0_reg_1197 );

    SC_METHOD(thread_icmp_ln58_fu_1422_p2);
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ii6_0_reg_1208 );

    SC_METHOD(thread_ii_1_fu_1428_p2);
    sensitive << ( ii6_0_reg_1208 );

    SC_METHOD(thread_ii_fu_1238_p2);
    sensitive << ( index_reg_1185 );

    SC_METHOD(thread_jj_fu_1262_p2);
    sensitive << ( jj_0_reg_1197 );

    SC_METHOD(thread_res_0_V);
    sensitive << ( trunc_ln203_reg_2134 );
    sensitive << ( sext_ln59_fu_1443_p1 );
    sensitive << ( ap_CS_fsm_state23 );

    SC_METHOD(thread_res_0_V_ap_vld);
    sensitive << ( trunc_ln203_reg_2134 );
    sensitive << ( ap_CS_fsm_state23 );

    SC_METHOD(thread_res_1_V);
    sensitive << ( trunc_ln203_reg_2134 );
    sensitive << ( sext_ln59_fu_1443_p1 );
    sensitive << ( ap_CS_fsm_state23 );

    SC_METHOD(thread_res_1_V_ap_vld);
    sensitive << ( trunc_ln203_reg_2134 );
    sensitive << ( ap_CS_fsm_state23 );

    SC_METHOD(thread_res_2_V);
    sensitive << ( trunc_ln203_reg_2134 );
    sensitive << ( sext_ln59_fu_1443_p1 );
    sensitive << ( ap_CS_fsm_state23 );

    SC_METHOD(thread_res_2_V_ap_vld);
    sensitive << ( trunc_ln203_reg_2134 );
    sensitive << ( ap_CS_fsm_state23 );

    SC_METHOD(thread_res_3_V);
    sensitive << ( trunc_ln203_reg_2134 );
    sensitive << ( sext_ln59_fu_1443_p1 );
    sensitive << ( ap_CS_fsm_state23 );

    SC_METHOD(thread_res_3_V_ap_vld);
    sensitive << ( trunc_ln203_reg_2134 );
    sensitive << ( ap_CS_fsm_state23 );

    SC_METHOD(thread_res_4_V);
    sensitive << ( trunc_ln203_reg_2134 );
    sensitive << ( sext_ln59_fu_1443_p1 );
    sensitive << ( ap_CS_fsm_state23 );

    SC_METHOD(thread_res_4_V_ap_vld);
    sensitive << ( trunc_ln203_reg_2134 );
    sensitive << ( ap_CS_fsm_state23 );

    SC_METHOD(thread_res_5_V);
    sensitive << ( trunc_ln203_reg_2134 );
    sensitive << ( sext_ln59_fu_1443_p1 );
    sensitive << ( ap_CS_fsm_state23 );

    SC_METHOD(thread_res_5_V_ap_vld);
    sensitive << ( trunc_ln203_reg_2134 );
    sensitive << ( ap_CS_fsm_state23 );

    SC_METHOD(thread_res_6_V);
    sensitive << ( trunc_ln203_reg_2134 );
    sensitive << ( sext_ln59_fu_1443_p1 );
    sensitive << ( ap_CS_fsm_state23 );

    SC_METHOD(thread_res_6_V_ap_vld);
    sensitive << ( trunc_ln203_reg_2134 );
    sensitive << ( ap_CS_fsm_state23 );

    SC_METHOD(thread_res_7_V);
    sensitive << ( trunc_ln203_reg_2134 );
    sensitive << ( sext_ln59_fu_1443_p1 );
    sensitive << ( ap_CS_fsm_state23 );

    SC_METHOD(thread_res_7_V_ap_vld);
    sensitive << ( trunc_ln203_reg_2134 );
    sensitive << ( ap_CS_fsm_state23 );

    SC_METHOD(thread_sext_ln59_fu_1443_p1);
    sensitive << ( acc_V_q0 );

    SC_METHOD(thread_shl_ln_fu_1248_p3);
    sensitive << ( trunc_ln40_fu_1244_p1 );

    SC_METHOD(thread_tmp_fu_1282_p129);
    sensitive << ( shl_ln_reg_2103 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( zext_ln40_fu_1268_p1 );

    SC_METHOD(thread_trunc_ln203_fu_1439_p1);
    sensitive << ( ii6_0_reg_1208 );

    SC_METHOD(thread_trunc_ln40_fu_1244_p1);
    sensitive << ( index_reg_1185 );

    SC_METHOD(thread_zext_ln40_fu_1268_p1);
    sensitive << ( jj_0_reg_1197 );

    SC_METHOD(thread_zext_ln42_fu_1272_p1);
    sensitive << ( jj_0_reg_1197 );

    SC_METHOD(thread_zext_ln54_fu_1417_p1);
    sensitive << ( index_reg_1185 );

    SC_METHOD(thread_zext_ln59_fu_1434_p1);
    sensitive << ( ii6_0_reg_1208 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln35_fu_1232_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( icmp_ln58_fu_1422_p2 );
    sensitive << ( icmp_ln39_fu_1256_p2 );

    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "000000000000000000000001";
    grp_dense_simple_0_0_2_fu_1219_ap_start_reg = SC_LOGIC_0;
    grp_tanh_fu_1224_ap_start_reg = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "td_dense_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, input_0_V_read, "(port)input_0_V_read");
    sc_trace(mVcdFile, input_1_V_read, "(port)input_1_V_read");
    sc_trace(mVcdFile, input_2_V_read, "(port)input_2_V_read");
    sc_trace(mVcdFile, input_3_V_read, "(port)input_3_V_read");
    sc_trace(mVcdFile, input_4_V_read, "(port)input_4_V_read");
    sc_trace(mVcdFile, input_5_V_read, "(port)input_5_V_read");
    sc_trace(mVcdFile, input_6_V_read, "(port)input_6_V_read");
    sc_trace(mVcdFile, input_7_V_read, "(port)input_7_V_read");
    sc_trace(mVcdFile, input_8_V_read, "(port)input_8_V_read");
    sc_trace(mVcdFile, input_9_V_read, "(port)input_9_V_read");
    sc_trace(mVcdFile, input_10_V_read, "(port)input_10_V_read");
    sc_trace(mVcdFile, input_11_V_read, "(port)input_11_V_read");
    sc_trace(mVcdFile, input_12_V_read, "(port)input_12_V_read");
    sc_trace(mVcdFile, input_13_V_read, "(port)input_13_V_read");
    sc_trace(mVcdFile, input_14_V_read, "(port)input_14_V_read");
    sc_trace(mVcdFile, input_15_V_read, "(port)input_15_V_read");
    sc_trace(mVcdFile, input_16_V_read, "(port)input_16_V_read");
    sc_trace(mVcdFile, input_17_V_read, "(port)input_17_V_read");
    sc_trace(mVcdFile, input_18_V_read, "(port)input_18_V_read");
    sc_trace(mVcdFile, input_19_V_read, "(port)input_19_V_read");
    sc_trace(mVcdFile, input_20_V_read, "(port)input_20_V_read");
    sc_trace(mVcdFile, input_21_V_read, "(port)input_21_V_read");
    sc_trace(mVcdFile, input_22_V_read, "(port)input_22_V_read");
    sc_trace(mVcdFile, input_23_V_read, "(port)input_23_V_read");
    sc_trace(mVcdFile, input_24_V_read, "(port)input_24_V_read");
    sc_trace(mVcdFile, input_25_V_read, "(port)input_25_V_read");
    sc_trace(mVcdFile, input_26_V_read, "(port)input_26_V_read");
    sc_trace(mVcdFile, input_27_V_read, "(port)input_27_V_read");
    sc_trace(mVcdFile, input_28_V_read, "(port)input_28_V_read");
    sc_trace(mVcdFile, input_29_V_read, "(port)input_29_V_read");
    sc_trace(mVcdFile, input_30_V_read, "(port)input_30_V_read");
    sc_trace(mVcdFile, input_31_V_read, "(port)input_31_V_read");
    sc_trace(mVcdFile, input_32_V_read, "(port)input_32_V_read");
    sc_trace(mVcdFile, input_33_V_read, "(port)input_33_V_read");
    sc_trace(mVcdFile, input_34_V_read, "(port)input_34_V_read");
    sc_trace(mVcdFile, input_35_V_read, "(port)input_35_V_read");
    sc_trace(mVcdFile, input_36_V_read, "(port)input_36_V_read");
    sc_trace(mVcdFile, input_37_V_read, "(port)input_37_V_read");
    sc_trace(mVcdFile, input_38_V_read, "(port)input_38_V_read");
    sc_trace(mVcdFile, input_39_V_read, "(port)input_39_V_read");
    sc_trace(mVcdFile, input_40_V_read, "(port)input_40_V_read");
    sc_trace(mVcdFile, input_41_V_read, "(port)input_41_V_read");
    sc_trace(mVcdFile, input_42_V_read, "(port)input_42_V_read");
    sc_trace(mVcdFile, input_43_V_read, "(port)input_43_V_read");
    sc_trace(mVcdFile, input_44_V_read, "(port)input_44_V_read");
    sc_trace(mVcdFile, input_45_V_read, "(port)input_45_V_read");
    sc_trace(mVcdFile, input_46_V_read, "(port)input_46_V_read");
    sc_trace(mVcdFile, input_47_V_read, "(port)input_47_V_read");
    sc_trace(mVcdFile, input_48_V_read, "(port)input_48_V_read");
    sc_trace(mVcdFile, input_49_V_read, "(port)input_49_V_read");
    sc_trace(mVcdFile, input_50_V_read, "(port)input_50_V_read");
    sc_trace(mVcdFile, input_51_V_read, "(port)input_51_V_read");
    sc_trace(mVcdFile, input_52_V_read, "(port)input_52_V_read");
    sc_trace(mVcdFile, input_53_V_read, "(port)input_53_V_read");
    sc_trace(mVcdFile, input_54_V_read, "(port)input_54_V_read");
    sc_trace(mVcdFile, input_55_V_read, "(port)input_55_V_read");
    sc_trace(mVcdFile, input_56_V_read, "(port)input_56_V_read");
    sc_trace(mVcdFile, input_57_V_read, "(port)input_57_V_read");
    sc_trace(mVcdFile, input_58_V_read, "(port)input_58_V_read");
    sc_trace(mVcdFile, input_59_V_read, "(port)input_59_V_read");
    sc_trace(mVcdFile, input_60_V_read, "(port)input_60_V_read");
    sc_trace(mVcdFile, input_61_V_read, "(port)input_61_V_read");
    sc_trace(mVcdFile, input_62_V_read, "(port)input_62_V_read");
    sc_trace(mVcdFile, input_63_V_read, "(port)input_63_V_read");
    sc_trace(mVcdFile, input_64_V_read, "(port)input_64_V_read");
    sc_trace(mVcdFile, input_65_V_read, "(port)input_65_V_read");
    sc_trace(mVcdFile, input_66_V_read, "(port)input_66_V_read");
    sc_trace(mVcdFile, input_67_V_read, "(port)input_67_V_read");
    sc_trace(mVcdFile, input_68_V_read, "(port)input_68_V_read");
    sc_trace(mVcdFile, input_69_V_read, "(port)input_69_V_read");
    sc_trace(mVcdFile, input_70_V_read, "(port)input_70_V_read");
    sc_trace(mVcdFile, input_71_V_read, "(port)input_71_V_read");
    sc_trace(mVcdFile, input_72_V_read, "(port)input_72_V_read");
    sc_trace(mVcdFile, input_73_V_read, "(port)input_73_V_read");
    sc_trace(mVcdFile, input_74_V_read, "(port)input_74_V_read");
    sc_trace(mVcdFile, input_75_V_read, "(port)input_75_V_read");
    sc_trace(mVcdFile, input_76_V_read, "(port)input_76_V_read");
    sc_trace(mVcdFile, input_77_V_read, "(port)input_77_V_read");
    sc_trace(mVcdFile, input_78_V_read, "(port)input_78_V_read");
    sc_trace(mVcdFile, input_79_V_read, "(port)input_79_V_read");
    sc_trace(mVcdFile, input_80_V_read, "(port)input_80_V_read");
    sc_trace(mVcdFile, input_81_V_read, "(port)input_81_V_read");
    sc_trace(mVcdFile, input_82_V_read, "(port)input_82_V_read");
    sc_trace(mVcdFile, input_83_V_read, "(port)input_83_V_read");
    sc_trace(mVcdFile, input_84_V_read, "(port)input_84_V_read");
    sc_trace(mVcdFile, input_85_V_read, "(port)input_85_V_read");
    sc_trace(mVcdFile, input_86_V_read, "(port)input_86_V_read");
    sc_trace(mVcdFile, input_87_V_read, "(port)input_87_V_read");
    sc_trace(mVcdFile, input_88_V_read, "(port)input_88_V_read");
    sc_trace(mVcdFile, input_89_V_read, "(port)input_89_V_read");
    sc_trace(mVcdFile, input_90_V_read, "(port)input_90_V_read");
    sc_trace(mVcdFile, input_91_V_read, "(port)input_91_V_read");
    sc_trace(mVcdFile, input_92_V_read, "(port)input_92_V_read");
    sc_trace(mVcdFile, input_93_V_read, "(port)input_93_V_read");
    sc_trace(mVcdFile, input_94_V_read, "(port)input_94_V_read");
    sc_trace(mVcdFile, input_95_V_read, "(port)input_95_V_read");
    sc_trace(mVcdFile, input_96_V_read, "(port)input_96_V_read");
    sc_trace(mVcdFile, input_97_V_read, "(port)input_97_V_read");
    sc_trace(mVcdFile, input_98_V_read, "(port)input_98_V_read");
    sc_trace(mVcdFile, input_99_V_read, "(port)input_99_V_read");
    sc_trace(mVcdFile, input_100_V_read, "(port)input_100_V_read");
    sc_trace(mVcdFile, input_101_V_read, "(port)input_101_V_read");
    sc_trace(mVcdFile, input_102_V_read, "(port)input_102_V_read");
    sc_trace(mVcdFile, input_103_V_read, "(port)input_103_V_read");
    sc_trace(mVcdFile, input_104_V_read, "(port)input_104_V_read");
    sc_trace(mVcdFile, input_105_V_read, "(port)input_105_V_read");
    sc_trace(mVcdFile, input_106_V_read, "(port)input_106_V_read");
    sc_trace(mVcdFile, input_107_V_read, "(port)input_107_V_read");
    sc_trace(mVcdFile, input_108_V_read, "(port)input_108_V_read");
    sc_trace(mVcdFile, input_109_V_read, "(port)input_109_V_read");
    sc_trace(mVcdFile, input_110_V_read, "(port)input_110_V_read");
    sc_trace(mVcdFile, input_111_V_read, "(port)input_111_V_read");
    sc_trace(mVcdFile, input_112_V_read, "(port)input_112_V_read");
    sc_trace(mVcdFile, input_113_V_read, "(port)input_113_V_read");
    sc_trace(mVcdFile, input_114_V_read, "(port)input_114_V_read");
    sc_trace(mVcdFile, input_115_V_read, "(port)input_115_V_read");
    sc_trace(mVcdFile, input_116_V_read, "(port)input_116_V_read");
    sc_trace(mVcdFile, input_117_V_read, "(port)input_117_V_read");
    sc_trace(mVcdFile, input_118_V_read, "(port)input_118_V_read");
    sc_trace(mVcdFile, input_119_V_read, "(port)input_119_V_read");
    sc_trace(mVcdFile, input_120_V_read, "(port)input_120_V_read");
    sc_trace(mVcdFile, input_121_V_read, "(port)input_121_V_read");
    sc_trace(mVcdFile, input_122_V_read, "(port)input_122_V_read");
    sc_trace(mVcdFile, input_123_V_read, "(port)input_123_V_read");
    sc_trace(mVcdFile, input_124_V_read, "(port)input_124_V_read");
    sc_trace(mVcdFile, input_125_V_read, "(port)input_125_V_read");
    sc_trace(mVcdFile, input_126_V_read, "(port)input_126_V_read");
    sc_trace(mVcdFile, input_127_V_read, "(port)input_127_V_read");
    sc_trace(mVcdFile, res_0_V, "(port)res_0_V");
    sc_trace(mVcdFile, res_0_V_ap_vld, "(port)res_0_V_ap_vld");
    sc_trace(mVcdFile, res_1_V, "(port)res_1_V");
    sc_trace(mVcdFile, res_1_V_ap_vld, "(port)res_1_V_ap_vld");
    sc_trace(mVcdFile, res_2_V, "(port)res_2_V");
    sc_trace(mVcdFile, res_2_V_ap_vld, "(port)res_2_V_ap_vld");
    sc_trace(mVcdFile, res_3_V, "(port)res_3_V");
    sc_trace(mVcdFile, res_3_V_ap_vld, "(port)res_3_V_ap_vld");
    sc_trace(mVcdFile, res_4_V, "(port)res_4_V");
    sc_trace(mVcdFile, res_4_V_ap_vld, "(port)res_4_V_ap_vld");
    sc_trace(mVcdFile, res_5_V, "(port)res_5_V");
    sc_trace(mVcdFile, res_5_V_ap_vld, "(port)res_5_V_ap_vld");
    sc_trace(mVcdFile, res_6_V, "(port)res_6_V");
    sc_trace(mVcdFile, res_6_V_ap_vld, "(port)res_6_V_ap_vld");
    sc_trace(mVcdFile, res_7_V, "(port)res_7_V");
    sc_trace(mVcdFile, res_7_V_ap_vld, "(port)res_7_V_ap_vld");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, ap_block_state1, "ap_block_state1");
    sc_trace(mVcdFile, ii_fu_1238_p2, "ii_fu_1238_p2");
    sc_trace(mVcdFile, ii_reg_2098, "ii_reg_2098");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, shl_ln_fu_1248_p3, "shl_ln_fu_1248_p3");
    sc_trace(mVcdFile, shl_ln_reg_2103, "shl_ln_reg_2103");
    sc_trace(mVcdFile, icmp_ln35_fu_1232_p2, "icmp_ln35_fu_1232_p2");
    sc_trace(mVcdFile, jj_fu_1262_p2, "jj_fu_1262_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, grp_dense_simple_0_0_2_fu_1219_ap_return, "grp_dense_simple_0_0_2_fu_1219_ap_return");
    sc_trace(mVcdFile, dense_acc_0_V_reg_2116, "dense_acc_0_V_reg_2116");
    sc_trace(mVcdFile, ap_CS_fsm_state18, "ap_CS_fsm_state18");
    sc_trace(mVcdFile, ii_1_fu_1428_p2, "ii_1_fu_1428_p2");
    sc_trace(mVcdFile, ii_1_reg_2124, "ii_1_reg_2124");
    sc_trace(mVcdFile, ap_CS_fsm_state22, "ap_CS_fsm_state22");
    sc_trace(mVcdFile, icmp_ln58_fu_1422_p2, "icmp_ln58_fu_1422_p2");
    sc_trace(mVcdFile, trunc_ln203_fu_1439_p1, "trunc_ln203_fu_1439_p1");
    sc_trace(mVcdFile, trunc_ln203_reg_2134, "trunc_ln203_reg_2134");
    sc_trace(mVcdFile, acc_V_address0, "acc_V_address0");
    sc_trace(mVcdFile, acc_V_ce0, "acc_V_ce0");
    sc_trace(mVcdFile, acc_V_we0, "acc_V_we0");
    sc_trace(mVcdFile, acc_V_q0, "acc_V_q0");
    sc_trace(mVcdFile, dense_input_V_address0, "dense_input_V_address0");
    sc_trace(mVcdFile, dense_input_V_ce0, "dense_input_V_ce0");
    sc_trace(mVcdFile, dense_input_V_we0, "dense_input_V_we0");
    sc_trace(mVcdFile, dense_input_V_q0, "dense_input_V_q0");
    sc_trace(mVcdFile, dense_input_V_ce1, "dense_input_V_ce1");
    sc_trace(mVcdFile, dense_input_V_q1, "dense_input_V_q1");
    sc_trace(mVcdFile, grp_dense_simple_0_0_2_fu_1219_ap_start, "grp_dense_simple_0_0_2_fu_1219_ap_start");
    sc_trace(mVcdFile, grp_dense_simple_0_0_2_fu_1219_ap_done, "grp_dense_simple_0_0_2_fu_1219_ap_done");
    sc_trace(mVcdFile, grp_dense_simple_0_0_2_fu_1219_ap_idle, "grp_dense_simple_0_0_2_fu_1219_ap_idle");
    sc_trace(mVcdFile, grp_dense_simple_0_0_2_fu_1219_ap_ready, "grp_dense_simple_0_0_2_fu_1219_ap_ready");
    sc_trace(mVcdFile, grp_dense_simple_0_0_2_fu_1219_data_V_address0, "grp_dense_simple_0_0_2_fu_1219_data_V_address0");
    sc_trace(mVcdFile, grp_dense_simple_0_0_2_fu_1219_data_V_ce0, "grp_dense_simple_0_0_2_fu_1219_data_V_ce0");
    sc_trace(mVcdFile, grp_dense_simple_0_0_2_fu_1219_data_V_address1, "grp_dense_simple_0_0_2_fu_1219_data_V_address1");
    sc_trace(mVcdFile, grp_dense_simple_0_0_2_fu_1219_data_V_ce1, "grp_dense_simple_0_0_2_fu_1219_data_V_ce1");
    sc_trace(mVcdFile, grp_tanh_fu_1224_ap_start, "grp_tanh_fu_1224_ap_start");
    sc_trace(mVcdFile, grp_tanh_fu_1224_ap_done, "grp_tanh_fu_1224_ap_done");
    sc_trace(mVcdFile, grp_tanh_fu_1224_ap_idle, "grp_tanh_fu_1224_ap_idle");
    sc_trace(mVcdFile, grp_tanh_fu_1224_ap_ready, "grp_tanh_fu_1224_ap_ready");
    sc_trace(mVcdFile, grp_tanh_fu_1224_ap_return, "grp_tanh_fu_1224_ap_return");
    sc_trace(mVcdFile, index_reg_1185, "index_reg_1185");
    sc_trace(mVcdFile, ap_CS_fsm_state21, "ap_CS_fsm_state21");
    sc_trace(mVcdFile, jj_0_reg_1197, "jj_0_reg_1197");
    sc_trace(mVcdFile, icmp_ln39_fu_1256_p2, "icmp_ln39_fu_1256_p2");
    sc_trace(mVcdFile, ii6_0_reg_1208, "ii6_0_reg_1208");
    sc_trace(mVcdFile, ap_CS_fsm_state24, "ap_CS_fsm_state24");
    sc_trace(mVcdFile, grp_dense_simple_0_0_2_fu_1219_ap_start_reg, "grp_dense_simple_0_0_2_fu_1219_ap_start_reg");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_NS_fsm_state9, "ap_NS_fsm_state9");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, ap_CS_fsm_state14, "ap_CS_fsm_state14");
    sc_trace(mVcdFile, ap_CS_fsm_state15, "ap_CS_fsm_state15");
    sc_trace(mVcdFile, ap_CS_fsm_state16, "ap_CS_fsm_state16");
    sc_trace(mVcdFile, ap_CS_fsm_state17, "ap_CS_fsm_state17");
    sc_trace(mVcdFile, grp_tanh_fu_1224_ap_start_reg, "grp_tanh_fu_1224_ap_start_reg");
    sc_trace(mVcdFile, ap_NS_fsm_state19, "ap_NS_fsm_state19");
    sc_trace(mVcdFile, ap_CS_fsm_state19, "ap_CS_fsm_state19");
    sc_trace(mVcdFile, zext_ln42_fu_1272_p1, "zext_ln42_fu_1272_p1");
    sc_trace(mVcdFile, zext_ln54_fu_1417_p1, "zext_ln54_fu_1417_p1");
    sc_trace(mVcdFile, zext_ln59_fu_1434_p1, "zext_ln59_fu_1434_p1");
    sc_trace(mVcdFile, sext_ln59_fu_1443_p1, "sext_ln59_fu_1443_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state23, "ap_CS_fsm_state23");
    sc_trace(mVcdFile, tmp_fu_1282_p130, "tmp_fu_1282_p130");
    sc_trace(mVcdFile, trunc_ln40_fu_1244_p1, "trunc_ln40_fu_1244_p1");
    sc_trace(mVcdFile, zext_ln40_fu_1268_p1, "zext_ln40_fu_1268_p1");
    sc_trace(mVcdFile, tmp_fu_1282_p129, "tmp_fu_1282_p129");
#endif

    }
}

td_dense::~td_dense() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete acc_V_U;
    delete dense_input_V_U;
    delete grp_dense_simple_0_0_2_fu_1219;
    delete grp_tanh_fu_1224;
    delete myproject_mux_128jbC_U1738;
}

void td_dense::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) && 
                    esl_seteq<1,1,1>(icmp_ln58_fu_1422_p2.read(), ap_const_lv1_1))) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_dense_simple_0_0_2_fu_1219_ap_start_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_NS_fsm_state9.read()))) {
            grp_dense_simple_0_0_2_fu_1219_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_dense_simple_0_0_2_fu_1219_ap_ready.read())) {
            grp_dense_simple_0_0_2_fu_1219_ap_start_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_tanh_fu_1224_ap_start_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_NS_fsm_state19.read()))) {
            grp_tanh_fu_1224_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_tanh_fu_1224_ap_ready.read())) {
            grp_tanh_fu_1224_ap_start_reg = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln35_fu_1232_p2.read(), ap_const_lv1_1))) {
        ii6_0_reg_1208 = ap_const_lv4_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read())) {
        ii6_0_reg_1208 = ii_1_reg_2124.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read())) {
        index_reg_1185 = ii_reg_2098.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        index_reg_1185 = ap_const_lv4_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln35_fu_1232_p2.read(), ap_const_lv1_0))) {
        jj_0_reg_1197 = ap_const_lv5_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln39_fu_1256_p2.read()))) {
        jj_0_reg_1197 = jj_fu_1262_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        dense_acc_0_V_reg_2116 = grp_dense_simple_0_0_2_fu_1219_ap_return.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) {
        ii_1_reg_2124 = ii_1_fu_1428_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        ii_reg_2098 = ii_fu_1238_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln35_fu_1232_p2.read(), ap_const_lv1_0))) {
        shl_ln_reg_2103 = shl_ln_fu_1248_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln58_fu_1422_p2.read()))) {
        trunc_ln203_reg_2134 = trunc_ln203_fu_1439_p1.read();
    }
}

void td_dense::thread_acc_V_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) {
        acc_V_address0 =  (sc_lv<3>) (zext_ln59_fu_1434_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read())) {
        acc_V_address0 =  (sc_lv<3>) (zext_ln54_fu_1417_p1.read());
    } else {
        acc_V_address0 = "XXX";
    }
}

void td_dense::thread_acc_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()))) {
        acc_V_ce0 = ap_const_logic_1;
    } else {
        acc_V_ce0 = ap_const_logic_0;
    }
}

void td_dense::thread_acc_V_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read())) {
        acc_V_we0 = ap_const_logic_1;
    } else {
        acc_V_we0 = ap_const_logic_0;
    }
}

void td_dense::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void td_dense::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void td_dense::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void td_dense::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void td_dense::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read()[12];
}

void td_dense::thread_ap_CS_fsm_state14() {
    ap_CS_fsm_state14 = ap_CS_fsm.read()[13];
}

void td_dense::thread_ap_CS_fsm_state15() {
    ap_CS_fsm_state15 = ap_CS_fsm.read()[14];
}

void td_dense::thread_ap_CS_fsm_state16() {
    ap_CS_fsm_state16 = ap_CS_fsm.read()[15];
}

void td_dense::thread_ap_CS_fsm_state17() {
    ap_CS_fsm_state17 = ap_CS_fsm.read()[16];
}

void td_dense::thread_ap_CS_fsm_state18() {
    ap_CS_fsm_state18 = ap_CS_fsm.read()[17];
}

void td_dense::thread_ap_CS_fsm_state19() {
    ap_CS_fsm_state19 = ap_CS_fsm.read()[18];
}

void td_dense::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void td_dense::thread_ap_CS_fsm_state21() {
    ap_CS_fsm_state21 = ap_CS_fsm.read()[20];
}

void td_dense::thread_ap_CS_fsm_state22() {
    ap_CS_fsm_state22 = ap_CS_fsm.read()[21];
}

void td_dense::thread_ap_CS_fsm_state23() {
    ap_CS_fsm_state23 = ap_CS_fsm.read()[22];
}

void td_dense::thread_ap_CS_fsm_state24() {
    ap_CS_fsm_state24 = ap_CS_fsm.read()[23];
}

void td_dense::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void td_dense::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void td_dense::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void td_dense::thread_ap_NS_fsm_state19() {
    ap_NS_fsm_state19 = ap_NS_fsm.read()[18];
}

void td_dense::thread_ap_NS_fsm_state9() {
    ap_NS_fsm_state9 = ap_NS_fsm.read()[8];
}

void td_dense::thread_ap_block_state1() {
    ap_block_state1 = (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1));
}

void td_dense::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) && 
         esl_seteq<1,1,1>(icmp_ln58_fu_1422_p2.read(), ap_const_lv1_1))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_done_reg.read();
    }
}

void td_dense::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void td_dense::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) && 
         esl_seteq<1,1,1>(icmp_ln58_fu_1422_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void td_dense::thread_dense_input_V_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        dense_input_V_address0 =  (sc_lv<4>) (zext_ln42_fu_1272_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()))) {
        dense_input_V_address0 = grp_dense_simple_0_0_2_fu_1219_data_V_address0.read();
    } else {
        dense_input_V_address0 =  (sc_lv<4>) ("XXXX");
    }
}

void td_dense::thread_dense_input_V_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        dense_input_V_ce0 = ap_const_logic_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()))) {
        dense_input_V_ce0 = grp_dense_simple_0_0_2_fu_1219_data_V_ce0.read();
    } else {
        dense_input_V_ce0 = ap_const_logic_0;
    }
}

void td_dense::thread_dense_input_V_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()))) {
        dense_input_V_ce1 = grp_dense_simple_0_0_2_fu_1219_data_V_ce1.read();
    } else {
        dense_input_V_ce1 = ap_const_logic_0;
    }
}

void td_dense::thread_dense_input_V_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln39_fu_1256_p2.read()))) {
        dense_input_V_we0 = ap_const_logic_1;
    } else {
        dense_input_V_we0 = ap_const_logic_0;
    }
}

void td_dense::thread_grp_dense_simple_0_0_2_fu_1219_ap_start() {
    grp_dense_simple_0_0_2_fu_1219_ap_start = grp_dense_simple_0_0_2_fu_1219_ap_start_reg.read();
}

void td_dense::thread_grp_tanh_fu_1224_ap_start() {
    grp_tanh_fu_1224_ap_start = grp_tanh_fu_1224_ap_start_reg.read();
}

void td_dense::thread_icmp_ln35_fu_1232_p2() {
    icmp_ln35_fu_1232_p2 = (!index_reg_1185.read().is_01() || !ap_const_lv4_8.is_01())? sc_lv<1>(): sc_lv<1>(index_reg_1185.read() == ap_const_lv4_8);
}

void td_dense::thread_icmp_ln39_fu_1256_p2() {
    icmp_ln39_fu_1256_p2 = (!jj_0_reg_1197.read().is_01() || !ap_const_lv5_10.is_01())? sc_lv<1>(): sc_lv<1>(jj_0_reg_1197.read() == ap_const_lv5_10);
}

void td_dense::thread_icmp_ln58_fu_1422_p2() {
    icmp_ln58_fu_1422_p2 = (!ii6_0_reg_1208.read().is_01() || !ap_const_lv4_8.is_01())? sc_lv<1>(): sc_lv<1>(ii6_0_reg_1208.read() == ap_const_lv4_8);
}

void td_dense::thread_ii_1_fu_1428_p2() {
    ii_1_fu_1428_p2 = (!ii6_0_reg_1208.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(ii6_0_reg_1208.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void td_dense::thread_ii_fu_1238_p2() {
    ii_fu_1238_p2 = (!index_reg_1185.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(index_reg_1185.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void td_dense::thread_jj_fu_1262_p2() {
    jj_fu_1262_p2 = (!jj_0_reg_1197.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(jj_0_reg_1197.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void td_dense::thread_res_0_V() {
    res_0_V = sext_ln59_fu_1443_p1.read();
}

void td_dense::thread_res_0_V_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) && 
         esl_seteq<1,3,3>(trunc_ln203_reg_2134.read(), ap_const_lv3_0))) {
        res_0_V_ap_vld = ap_const_logic_1;
    } else {
        res_0_V_ap_vld = ap_const_logic_0;
    }
}

void td_dense::thread_res_1_V() {
    res_1_V = sext_ln59_fu_1443_p1.read();
}

void td_dense::thread_res_1_V_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) && 
         esl_seteq<1,3,3>(trunc_ln203_reg_2134.read(), ap_const_lv3_1))) {
        res_1_V_ap_vld = ap_const_logic_1;
    } else {
        res_1_V_ap_vld = ap_const_logic_0;
    }
}

void td_dense::thread_res_2_V() {
    res_2_V = sext_ln59_fu_1443_p1.read();
}

void td_dense::thread_res_2_V_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) && 
         esl_seteq<1,3,3>(trunc_ln203_reg_2134.read(), ap_const_lv3_2))) {
        res_2_V_ap_vld = ap_const_logic_1;
    } else {
        res_2_V_ap_vld = ap_const_logic_0;
    }
}

void td_dense::thread_res_3_V() {
    res_3_V = sext_ln59_fu_1443_p1.read();
}

void td_dense::thread_res_3_V_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) && 
         esl_seteq<1,3,3>(trunc_ln203_reg_2134.read(), ap_const_lv3_3))) {
        res_3_V_ap_vld = ap_const_logic_1;
    } else {
        res_3_V_ap_vld = ap_const_logic_0;
    }
}

void td_dense::thread_res_4_V() {
    res_4_V = sext_ln59_fu_1443_p1.read();
}

void td_dense::thread_res_4_V_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) && 
         esl_seteq<1,3,3>(trunc_ln203_reg_2134.read(), ap_const_lv3_4))) {
        res_4_V_ap_vld = ap_const_logic_1;
    } else {
        res_4_V_ap_vld = ap_const_logic_0;
    }
}

void td_dense::thread_res_5_V() {
    res_5_V = sext_ln59_fu_1443_p1.read();
}

void td_dense::thread_res_5_V_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) && 
         esl_seteq<1,3,3>(trunc_ln203_reg_2134.read(), ap_const_lv3_5))) {
        res_5_V_ap_vld = ap_const_logic_1;
    } else {
        res_5_V_ap_vld = ap_const_logic_0;
    }
}

void td_dense::thread_res_6_V() {
    res_6_V = sext_ln59_fu_1443_p1.read();
}

void td_dense::thread_res_6_V_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) && 
         esl_seteq<1,3,3>(trunc_ln203_reg_2134.read(), ap_const_lv3_6))) {
        res_6_V_ap_vld = ap_const_logic_1;
    } else {
        res_6_V_ap_vld = ap_const_logic_0;
    }
}

void td_dense::thread_res_7_V() {
    res_7_V = sext_ln59_fu_1443_p1.read();
}

void td_dense::thread_res_7_V_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) && 
         esl_seteq<1,3,3>(trunc_ln203_reg_2134.read(), ap_const_lv3_7))) {
        res_7_V_ap_vld = ap_const_logic_1;
    } else {
        res_7_V_ap_vld = ap_const_logic_0;
    }
}

void td_dense::thread_sext_ln59_fu_1443_p1() {
    sext_ln59_fu_1443_p1 = esl_sext<16,11>(acc_V_q0.read());
}

void td_dense::thread_shl_ln_fu_1248_p3() {
    shl_ln_fu_1248_p3 = esl_concat<3,4>(trunc_ln40_fu_1244_p1.read(), ap_const_lv4_0);
}

void td_dense::thread_tmp_fu_1282_p129() {
    tmp_fu_1282_p129 = (!shl_ln_reg_2103.read().is_01() || !zext_ln40_fu_1268_p1.read().is_01())? sc_lv<7>(): (sc_biguint<7>(shl_ln_reg_2103.read()) + sc_biguint<7>(zext_ln40_fu_1268_p1.read()));
}

void td_dense::thread_trunc_ln203_fu_1439_p1() {
    trunc_ln203_fu_1439_p1 = ii6_0_reg_1208.read().range(3-1, 0);
}

void td_dense::thread_trunc_ln40_fu_1244_p1() {
    trunc_ln40_fu_1244_p1 = index_reg_1185.read().range(3-1, 0);
}

void td_dense::thread_zext_ln40_fu_1268_p1() {
    zext_ln40_fu_1268_p1 = esl_zext<7,5>(jj_0_reg_1197.read());
}

void td_dense::thread_zext_ln42_fu_1272_p1() {
    zext_ln42_fu_1272_p1 = esl_zext<64,5>(jj_0_reg_1197.read());
}

void td_dense::thread_zext_ln54_fu_1417_p1() {
    zext_ln54_fu_1417_p1 = esl_zext<64,4>(index_reg_1185.read());
}

void td_dense::thread_zext_ln59_fu_1434_p1() {
    zext_ln59_fu_1434_p1 = esl_zext<64,4>(ii6_0_reg_1208.read());
}

void td_dense::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln35_fu_1232_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state22;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln39_fu_1256_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state15;
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_fsm_state16;
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_fsm_state17;
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_fsm_state18;
            break;
        case 131072 : 
            ap_NS_fsm = ap_ST_fsm_state19;
            break;
        case 262144 : 
            ap_NS_fsm = ap_ST_fsm_state20;
            break;
        case 524288 : 
            ap_NS_fsm = ap_ST_fsm_state21;
            break;
        case 1048576 : 
            ap_NS_fsm = ap_ST_fsm_state2;
            break;
        case 2097152 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) && esl_seteq<1,1,1>(icmp_ln58_fu_1422_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state23;
            }
            break;
        case 4194304 : 
            ap_NS_fsm = ap_ST_fsm_state24;
            break;
        case 8388608 : 
            ap_NS_fsm = ap_ST_fsm_state22;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<24>) ("XXXXXXXXXXXXXXXXXXXXXXXX");
            break;
    }
}

}

